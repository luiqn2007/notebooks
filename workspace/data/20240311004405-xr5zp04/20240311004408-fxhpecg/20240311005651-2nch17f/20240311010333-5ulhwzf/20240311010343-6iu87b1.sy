{"ID":"20240311010343-6iu87b1","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f600","id":"20240311010343-6iu87b1","title":"流","updated":"20240311010859"},"Children":[{"ID":"20240311010859-nivd50e","Type":"NodeParagraph","Properties":{"id":"20240311010859-nivd50e","updated":"20240311010859"},"Children":[{"Type":"NodeText","Data":"对于 C 语言，所有的 IO 操作都可以抽象成简单的字节移入移出的操作。这类字节流称为"},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"流（stream）"},{"Type":"NodeText","Data":"。程序只需要创建正确的流并按正确的顺序读写数据即可。"}]},{"ID":"20240311010859-9ormoep","Type":"NodeParagraph","Properties":{"id":"20240311010859-9ormoep","updated":"20240311010859"},"Children":[{"Type":"NodeText","Data":"大部分流是 "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"完全缓冲（fully buffered）"},{"Type":"NodeText","Data":" 的，即写入、读出操作并不直接操作对应的设备，而是针对程序的一块内存（称为 "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"缓冲区（buffer）"},{"Type":"NodeText","Data":" ）以提高效率。通常，用于输出的缓冲区只有被写满或手动调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"flush"},{"Type":"NodeText","Data":"​ 命令时才会将数据写入到设备或文件中，输入则会在缓冲区空时再从设备或文件读取下一部分数据以填充缓冲区。"}]},{"ID":"20240311010859-hbviu5z","Type":"NodeParagraph","Properties":{"id":"20240311010859-hbviu5z","updated":"20240311010859"},"Children":[{"Type":"NodeText","Data":"只有操作系统确定与交互设备无联系时才会使用完全缓冲，其他设备的策略与编译器实现有关。一个常见策略是将输入输出缓冲区联系在一起，在输入时同时刷新输出缓冲区。"}]},{"ID":"20240311010859-hpiva95","Type":"NodeParagraph","Properties":{"id":"20240311010859-hpiva95","updated":"20240311010859"},"Children":[{"Type":"NodeText","Data":"由于缓冲区输出不是立即的，因此 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"printf"},{"Type":"NodeText","Data":"​ 不一定是在运行时就立即输出（但输出顺序是一定的）。这可能不太便于调试，可使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"fflush"},{"Type":"NodeText","Data":"​ 立即输出"}]},{"ID":"20240311010859-n9rhzp9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311010859-n9rhzp9","updated":"20240311010859"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"printf(\"...\");\nfflush(stdout);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311010859-5k980fh","Type":"NodeParagraph","Properties":{"id":"20240311010859-5k980fh","updated":"20240311010859"},"Children":[{"Type":"NodeText","Data":"流按内容分为两种：文本流和二进制流，读写内容分别是文本信息和二进制数据。"}]},{"ID":"20240311010859-p8p0cwj","Type":"NodeList","ListData":{},"Properties":{"id":"20240311010859-p8p0cwj","updated":"20240311010859"},"Children":[{"ID":"20240311010859-fkq5wn1","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240311010859-fkq5wn1","updated":"20240311010859"},"Children":[{"ID":"20240311010859-l1pbg0n","Type":"NodeParagraph","Properties":{"id":"20240311010859-l1pbg0n","updated":"20240311010859"},"Children":[{"Type":"NodeText","Data":"文本流库函数可以完成诸如不同系统换行符差异的翻译"}]}]},{"ID":"20240311010859-35u81g0","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240311010859-35u81g0","updated":"20240311010859"},"Children":[{"ID":"20240311010859-c10ybjs","Type":"NodeParagraph","Properties":{"id":"20240311010859-c10ybjs","updated":"20240311010859"},"Children":[{"Type":"NodeText","Data":"二进制流则是完全按照实际 IO 数据进行写入和读出"}]}]}]}]}