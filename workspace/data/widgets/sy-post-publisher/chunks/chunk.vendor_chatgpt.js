import{K as R}from"./chunk.vendor_keyv.js";import{p as $}from"./chunk.vendor_p-timeout.js";import{Q as L}from"./chunk.vendor_quick-lru.js";import{g as B}from"./chunk.vendor_js-tiktoken.js";import{c as D}from"./chunk.vendor_eventsource-parser.js";import{v as O}from"./chunk.vendor_uuid.js";var K=B("cl100k_base");function N(e){return new Uint32Array(K.encode(e))}var S=class extends Error{},U=globalThis.fetch;async function*J(e){const s=e.getReader();try{for(;;){const{done:l,value:d}=await s.read();if(l)return;yield d}}finally{s.releaseLock()}}async function G(e,s,l=U){const{onMessage:d,onError:h,...g}=s,o=await l(e,g);if(!o.ok){let t;try{t=await o.text()}catch{t=o.statusText}const a=`ChatGPT error ${o.status}: ${t}`,n=new S(a,{cause:o});throw n.statusCode=o.status,n.statusText=o.statusText,n}const u=D(t=>{t.type==="event"&&d(t.data)}),m=t=>{var a;let n=null;try{n=JSON.parse(t)}catch{}if(((a=n==null?void 0:n.detail)==null?void 0:a.type)==="invalid_request_error"){const _=`ChatGPT error ${n.detail.message}: ${n.detail.code} (${n.detail.type})`,p=new S(_,{cause:n});p.statusCode=n.detail.code,p.statusText=n.detail.message,h?h(p):console.error(p);return}u.feed(t)};if(o.body.getReader)for await(const t of J(o.body)){const a=new TextDecoder().decode(t);m(a)}else{const t=o.body;if(!t.on||!t.read)throw new S('unsupported "fetch" implementation');t.on("readable",()=>{let a;for(;(a=t.read())!==null;)m(a.toString())})}}var z="gpt-3.5-turbo",Q="User",q="ChatGPT",j=class{constructor(e){const{apiKey:s,apiOrg:l,apiBaseUrl:d="https://api.openai.com/v1",debug:h=!1,messageStore:g,completionParams:o,systemMessage:u,maxModelTokens:m=4e3,maxResponseTokens:t=1e3,getMessageById:a,upsertMessage:n,fetch:_=U}=e;if(this._apiKey=s,this._apiOrg=l,this._apiBaseUrl=d,this._debug=!!h,this._fetch=_,this._completionParams={model:z,temperature:.8,top_p:1,presence_penalty:1,...o},this._systemMessage=u,this._systemMessage===void 0){const p=new Date().toISOString().split("T")[0];this._systemMessage=`You are ChatGPT, a large language model trained by OpenAI. Answer as concisely as possible.
Knowledge cutoff: 2021-09-01
Current date: ${p}`}if(this._maxModelTokens=m,this._maxResponseTokens=t,this._getMessageById=a??this._defaultGetMessageById,this._upsertMessage=n??this._defaultUpsertMessage,g?this._messageStore=g:this._messageStore=new R({store:new L({maxSize:1e4})}),!this._apiKey)throw new Error("OpenAI missing required apiKey");if(!this._fetch)throw new Error("Invalid environment; fetch is not defined");if(typeof this._fetch!="function")throw new Error('Invalid "fetch" is not a function')}async sendMessage(e,s={}){const{parentMessageId:l,messageId:d=O(),timeoutMs:h,onProgress:g,stream:o=!!g,completionParams:u,conversationId:m}=s;let{abortSignal:t}=s,a=null;h&&!t&&(a=new AbortController,t=a.signal);const _={role:"user",id:d,conversationId:m,parentMessageId:l,text:e},{messages:p,maxTokens:b,numTokens:w}=await this._buildMessages(e,s),i={role:"assistant",id:O(),conversationId:m,parentMessageId:d,text:""},f=new Promise(async(r,v)=>{var M,I;const k=`${this._apiBaseUrl}/chat/completions`,P={"Content-Type":"application/json",Authorization:`Bearer ${this._apiKey}`},C={max_tokens:b,...this._completionParams,...u,messages:p,stream:o};if(this._apiOrg&&(P["OpenAI-Organization"]=this._apiOrg),this._debug&&console.log(`sendMessage (${w} tokens)`,C),o)G(k,{method:"POST",headers:P,body:JSON.stringify(C),signal:t,onMessage:y=>{var T;if(y==="[DONE]")return i.text=i.text.trim(),r(i);try{const c=JSON.parse(y);if(c.id&&(i.id=c.id),(T=c.choices)!=null&&T.length){const x=c.choices[0].delta;i.delta=x.content,x!=null&&x.content&&(i.text+=x.content),x.role&&(i.role=x.role),i.detail=c,g==null||g(i)}}catch(c){return console.warn("OpenAI stream SEE event unexpected error",c),v(c)}}},this._fetch).catch(v);else try{const y=await this._fetch(k,{method:"POST",headers:P,body:JSON.stringify(C),signal:t});if(!y.ok){const c=await y.text(),x=`OpenAI error ${y.status||y.statusText}: ${c}`,E=new S(x,{cause:y});return E.statusCode=y.status,E.statusText=y.statusText,v(E)}const T=await y.json();if(this._debug&&console.log(T),T!=null&&T.id&&(i.id=T.id),(M=T==null?void 0:T.choices)!=null&&M.length){const c=T.choices[0].message;i.text=c.content,c.role&&(i.role=c.role)}else{const c=T;return v(new Error(`OpenAI error: ${((I=c==null?void 0:c.detail)==null?void 0:I.message)||(c==null?void 0:c.detail)||"unknown"}`))}return i.detail=T,r(i)}catch(y){return v(y)}}).then(async r=>{if(r.detail&&!r.detail.usage)try{const v=w,M=await this._getTokenCount(r.text);r.detail.usage={prompt_tokens:v,completion_tokens:M,total_tokens:v+M,estimated:!0}}catch{}return Promise.all([this._upsertMessage(_),this._upsertMessage(r)]).then(()=>r)});return h?(a&&(f.cancel=()=>{a.abort()}),$(f,{milliseconds:h,message:"OpenAI timed out waiting for response"})):f}get apiKey(){return this._apiKey}set apiKey(e){this._apiKey=e}get apiOrg(){return this._apiOrg}set apiOrg(e){this._apiOrg=e}async _buildMessages(e,s){const{systemMessage:l=this._systemMessage}=s;let{parentMessageId:d}=s;const h=Q,g=q,o=this._maxModelTokens-this._maxResponseTokens;let u=[];l&&u.push({role:"system",content:l});const m=u.length;let t=e?u.concat([{role:"user",content:e,name:s.name}]):u,a=0;do{const _=t.reduce((f,r)=>{switch(r.role){case"system":return f.concat([`Instructions:
${r.content}`]);case"user":return f.concat([`${h}:
${r.content}`]);default:return f.concat([`${g}:
${r.content}`])}},[]).join(`

`),p=await this._getTokenCount(_),b=p<=o;if(_&&!b||(u=t,a=p,!b)||!d)break;const w=await this._getMessageById(d);if(!w)break;const i=w.role||"user";t=t.slice(0,m).concat([{role:i,content:w.text,name:w.name},...t.slice(m)]),d=w.parentMessageId}while(!0);const n=Math.max(1,Math.min(this._maxModelTokens-a,this._maxResponseTokens));return{messages:u,maxTokens:n,numTokens:a}}async _getTokenCount(e){return e=e.replace(/<\|endoftext\|>/g,""),N(e).length}async _defaultGetMessageById(e){return await this._messageStore.get(e)}async _defaultUpsertMessage(e){await this._messageStore.set(e.id,e)}},F=/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;function A(e){return e&&F.test(e)}var ee=class{constructor(e){const{accessToken:s,apiReverseProxyUrl:l="https://bypass.duti.tech/api/conversation",model:d="text-davinci-002-render-sha",debug:h=!1,headers:g,fetch:o=U}=e;if(this._accessToken=s,this._apiReverseProxyUrl=l,this._debug=!!h,this._model=d,this._fetch=o,this._headers=g,!this._accessToken)throw new Error("ChatGPT invalid accessToken");if(!this._fetch)throw new Error("Invalid environment; fetch is not defined");if(typeof this._fetch!="function")throw new Error('Invalid "fetch" is not a function')}get accessToken(){return this._accessToken}set accessToken(e){this._accessToken=e}async sendMessage(e,s={}){if(!!s.conversationId!=!!s.parentMessageId)throw new Error("ChatGPTUnofficialProxyAPI.sendMessage: conversationId and parentMessageId must both be set or both be undefined");if(s.conversationId&&!A(s.conversationId))throw new Error("ChatGPTUnofficialProxyAPI.sendMessage: conversationId is not a valid v4 UUID");if(s.parentMessageId&&!A(s.parentMessageId))throw new Error("ChatGPTUnofficialProxyAPI.sendMessage: parentMessageId is not a valid v4 UUID");if(s.messageId&&!A(s.messageId))throw new Error("ChatGPTUnofficialProxyAPI.sendMessage: messageId is not a valid v4 UUID");const{conversationId:l,parentMessageId:d=O(),messageId:h=O(),action:g="next",timeoutMs:o,onProgress:u}=s;let{abortSignal:m}=s,t=null;o&&!m&&(t=new AbortController,m=t.signal);const a={action:g,messages:[{id:h,role:"user",content:{content_type:"text",parts:[e]}}],model:this._model,parent_message_id:d};l&&(a.conversation_id=l);const n={role:"assistant",id:O(),parentMessageId:h,conversationId:l,text:""},_=new Promise((p,b)=>{const w=this._apiReverseProxyUrl,i={...this._headers,Authorization:`Bearer ${this._accessToken}`,Accept:"text/event-stream","Content-Type":"application/json"};this._debug&&console.log("POST",w,{body:a,headers:i}),G(w,{method:"POST",headers:i,body:JSON.stringify(a),signal:m,onMessage:f=>{var r,v,M;if(f==="[DONE]")return p(n);try{const I=JSON.parse(f);I.conversation_id&&(n.conversationId=I.conversation_id),(r=I.message)!=null&&r.id&&(n.id=I.message.id);const k=I.message;if(k){let P=(M=(v=k==null?void 0:k.content)==null?void 0:v.parts)==null?void 0:M[0];P&&(n.text=P,u&&u(n))}}catch(I){this._debug&&console.warn("chatgpt unexpected JSON error",I)}},onError:f=>{b(f)}},this._fetch).catch(f=>{const r=f.toString().toLowerCase();return n.text&&(r==="error: typeerror: terminated"||r==="typeerror: terminated")?p(n):b(f)})});return o?(t&&(_.cancel=()=>{t.abort()}),$(_,{milliseconds:o,message:"ChatGPT timed out waiting for response"})):_}};export{ee as C,j as a};
