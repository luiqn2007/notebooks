const R=(e,l,i)=>{const r=l??"zhi",a=o=>{const n=o.getFullYear(),$=String(o.getMonth()+1).padStart(2,"0"),t=String(o.getDate()).padStart(2,"0"),p=String(o.getHours()).padStart(2,"0"),d=String(o.getMinutes()).padStart(2,"0"),w=String(o.getSeconds()).padStart(2,"0");return`${n}-${$}-${t} ${p}:${d}:${w}`},g=(o,n)=>{const $=a(new Date),t=typeof n=="boolean"?String(n):n;t?console.log(`[${r}] [${$}] [DEBUG] [${e}] ${o}`,t):console.log(`[${r}] [${$}] [DEBUG] [${e}] ${o}`)},s=(o,n)=>{const $=a(new Date),t=typeof n=="boolean"?String(n):n;t?console.info(`[${r}] [${$}] [INFO] [${e}] ${o}`,t):console.info(`[${r}] [${$}] [INFO] [${e}] ${o}`)},c=(o,n)=>{const $=a(new Date),t=typeof n=="boolean"?String(n):n;t?console.warn(`[${r}] [${$}] [WARN] [${e}] ${o}`,t):console.warn(`[${r}] [${$}] [WARN] [${e}] ${o}`)},S=(o,n)=>{const $=a(new Date);n?console.error(`[${r}] [${$}] [ERROR] [${e}] ${o.toString()}`,n):console.error(`[${r}] [${$}] [ERROR] [${e}] ${o.toString()}`)};return{debug:(o,n)=>{i&&(n?g(o,n):g(o))},info:(o,n)=>{n?s(o,n):s(o)},warn:(o,n)=>{n?c(o,n):c(o)},error:(o,n)=>{n?S(o,n):S(o)}}};export{R as w};
