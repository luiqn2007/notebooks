{"ID":"20240311161822-xxvoojh","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240311161822-xxvoojh","title":"资源代理 MBean Server","updated":"20240311161907"},"Children":[{"ID":"20240311161830-w9ukosn","Type":"NodeParagraph","Properties":{"id":"20240311161830-w9ukosn","updated":"20240311161830"},"Children":[{"Type":"NodeText","Data":"资源代理 MBean Server 是 MBean 资源的代理，通过 MBean Server 可以让 MBean 资源用于远程管理， MBean 资源和 MBean Server 往往都是在同一个 JVM 中，但这不是必须的。"}]},{"ID":"20240311161830-ngxzhu1","Type":"NodeParagraph","Properties":{"id":"20240311161830-ngxzhu1","updated":"20240311161907"},"Children":[{"Type":"NodeText","Data":"想要 MBean Server 可以管理 MBean 资源，首先要把资源注册到 MBean Server，任何符合 "},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240311161549-q2f3url","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"JMX"},{"Type":"NodeText","Data":" 的 "},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240311161744-4fr2gkj","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"MBean"},{"Type":"NodeText","Data":" 资源都可以进行注册，最后 MBean Server 会暴露一个远程通信接口对外提供服务。"}]},{"ID":"20240311161830-3ex8nx6","Type":"NodeParagraph","Properties":{"id":"20240311161830-3ex8nx6","updated":"20240311161830"},"Children":[{"Type":"NodeText","Data":"MBean 的编写必须遵守 JMX 的设计规范，MBean 很像一个特殊的 Java Bean，它需要一个接口和一个实现类。"}]},{"ID":"20240311161830-rz4tjva","Type":"NodeParagraph","Properties":{"id":"20240311161830-rz4tjva","updated":"20240311161830"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"MBean 资源接口总是以 MBean 或者 MXBean 结尾"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240311161830-42yfdrj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311161830-42yfdrj","updated":"20240311161830"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public interface MyMemoryMBean {\n\n    long getTotal();\n\n    void setTotal(long memory);\n\n    long getUsed();\n\n    void setUsed(long memory);\n  \n    String getMemoryInfo();\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311161830-tx1hvoy","Type":"NodeParagraph","Properties":{"id":"20240311161830-tx1hvoy","updated":"20240311161830"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"实现类则要以接口去掉 MBean 或 MXBean 之后的名字来命名。"}]},{"ID":"20240311161830-8kyyofx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311161830-8kyyofx","updated":"20240311161830"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public class MyMemory implements MyMemoryMBean {\n\n    long total, used;\n\n    @Override\n    public long getTotal() {\n        return total;\n    }\n\n    @Override\n    public void setTotal(long memory) {\n        total = memory;\n    }\n\n    @Override\n    public long getUsed() {\n        return used;\n    }\n\n    @Override\n    public void setUsed(long memory) {\n        used = memory;\n    }\n\n    @Override\n    public String getMemoryInfo() {\n        return String.format(\"Memory: %dMB/%dMB\", used / 1024 / 1024, total / 1024 / 1024);\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311161830-n1z4p6k","Type":"NodeParagraph","Properties":{"id":"20240311161830-n1z4p6k","updated":"20240311161830"},"Children":[{"Type":"NodeText","Data":"MBean 资源需要注册到 MBean Server 进行代理才可以暴露给外部进行调用，所以我们想要通过远程管理我们自定义的 MyMemory 资源，需要先进行资源代理。"}]},{"ID":"20240311161830-swsnkia","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311161830-swsnkia","updated":"20240311161830"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"// 初始化 MyMemory\nMyMemory memory = new MyMemory();\nmemory.setTotal(4L * 1024 * 1024 * 1024 * 1024);\nmemory.setUsed(0);\n// 注册\nMBeanServer server = ManagementFactory.getPlatformMBeanServer();\nObjectName objectName = new ObjectName(\"com.example.jmx;type=memory\");\nserver.registerMBean(memory, objectName);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}