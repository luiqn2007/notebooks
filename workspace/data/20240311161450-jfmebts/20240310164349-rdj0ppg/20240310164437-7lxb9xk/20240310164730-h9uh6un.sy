{"ID":"20240310164730-h9uh6un","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240310164730-h9uh6un","title":"call_once","updated":"20240310164747"},"Children":[{"ID":"20240310164731-x5054p9","Type":"NodeParagraph","Properties":{"id":"20240310164731-x5054p9","updated":"20240310164747"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"std::call_once"},{"Type":"NodeText","Data":"​  配合 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"std::once_flag"},{"Type":"NodeText","Data":"​ 用于保证某一函数在多线程中仅执行一次"}]},{"ID":"20240310164744-fwvmmd8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310164744-fwvmmd8","updated":"20240310164744"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"#include \u003ciostream\u003e\n#include \u003cthread\u003e\n#include \u003cmutex\u003e\n\nusing namespace std;\n\nonce_flag flag;\n\nvoid initialize() {\n    call_once(flag, [] () {\n        cout \u003c\u003c \"Invoke this\" \u003c\u003c endl;\n    });\n}\n\nint main() {\n    // Invoke this\n    thread threads[5];\n    for (auto \u0026 i : threads) {\n        i = thread(initialize);\n    }\n\n    for (auto \u0026item: threads) {\n        item.join();\n    }\n\n    // All finished\n    cout \u003c\u003c \"All finished\" \u003c\u003c endl;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}