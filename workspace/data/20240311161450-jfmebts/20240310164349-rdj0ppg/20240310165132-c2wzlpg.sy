{"ID":"20240310165132-c2wzlpg","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240310165132-c2wzlpg","title":"协程","updated":"20240310165136"},"Children":[{"ID":"20240310165136-gzbu9qv","Type":"NodeParagraph","Properties":{"id":"20240310165136-gzbu9qv","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"协程是一种通过任务调度，使用单线程模拟多线程，同时执行多个任务的模型。可以在函数执行到某个地方时暂停执行，随后可以从暂停的地方恢复执行。"}]},{"ID":"20240310165136-3nw0trs","Type":"NodeParagraph","Properties":{"id":"20240310165136-3nw0trs","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"优点："}]},{"ID":"20240310165136-mjbqrtn","Type":"NodeList","ListData":{},"Properties":{"id":"20240310165136-mjbqrtn","updated":"20240310165136"},"Children":[{"ID":"20240310165136-1rwvzid","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240310165136-1rwvzid","updated":"20240310165136"},"Children":[{"ID":"20240310165136-cemmosh","Type":"NodeParagraph","Properties":{"id":"20240310165136-cemmosh","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"相对线程来说，不需要切换线程上下文，任务切换相当快"}]}]},{"ID":"20240310165136-nxcuqqg","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240310165136-nxcuqqg","updated":"20240310165136"},"Children":[{"ID":"20240310165136-8n7fu9c","Type":"NodeParagraph","Properties":{"id":"20240310165136-8n7fu9c","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"实质是单线程模拟多线程，不需要锁机制，不需要控制共享资源，只需要判断状态即可"}]}]}]},{"ID":"20240310165136-py7tg4q","Type":"NodeParagraph","Properties":{"id":"20240310165136-py7tg4q","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"缺点："}]},{"ID":"20240310165136-ejq3xpo","Type":"NodeList","ListData":{},"Properties":{"id":"20240310165136-ejq3xpo","updated":"20240310165136"},"Children":[{"ID":"20240310165136-l137scv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240310165136-l137scv","updated":"20240310165136"},"Children":[{"ID":"20240310165136-wkkgll8","Type":"NodeParagraph","Properties":{"id":"20240310165136-wkkgll8","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"无法充分利用多核处理器并行处理能力"}]}]},{"ID":"20240310165136-1y6peo3","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240310165136-1y6peo3","updated":"20240310165136"},"Children":[{"ID":"20240310165136-nbuj2vy","Type":"NodeParagraph","Properties":{"id":"20240310165136-nbuj2vy","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"阻塞操作（如IO）时会阻塞掉整个程序"}]}]}]},{"ID":"20240310165136-05t5bba","Type":"NodeParagraph","Properties":{"id":"20240310165136-05t5bba","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"协程实际是将“异步”风格编程“同步”化，大大增强单线程处理能力，但无法充分利用多线程处理能力。可使用多个线程+协程的组合。"}]},{"ID":"20240310165136-8y6dyf9","Type":"NodeParagraph","Properties":{"id":"20240310165136-8y6dyf9","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"控制关键字："}]},{"ID":"20240310165136-es46s1r","Type":"NodeList","ListData":{},"Properties":{"id":"20240310165136-es46s1r","updated":"20240310165136"},"Children":[{"ID":"20240310165136-c3xcdef","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240310165136-c3xcdef","updated":"20240310165136"},"Children":[{"ID":"20240310165136-9yjc52k","Type":"NodeParagraph","Properties":{"id":"20240310165136-9yjc52k","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"co_wait"},{"Type":"NodeText","Data":"​：挂起协程，进行其他任务"}]}]},{"ID":"20240310165136-hc4u3m9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240310165136-hc4u3m9","updated":"20240310165136"},"Children":[{"ID":"20240310165136-295qap9","Type":"NodeParagraph","Properties":{"id":"20240310165136-295qap9","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"co_return"},{"Type":"NodeText","Data":"​：协程返回（任务结束）"}]}]},{"ID":"20240310165136-0je82cs","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240310165136-0je82cs","updated":"20240310165136"},"Children":[{"ID":"20240310165136-x3aibaz","Type":"NodeParagraph","Properties":{"id":"20240310165136-x3aibaz","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"co_yield"},{"Type":"NodeText","Data":"​：协程返回一个结果并挂起，等待下次调用执行（任务阶段性完成）"}]}]}]},{"ID":"20240310165136-v78scac","Type":"NodeParagraph","Properties":{"id":"20240310165136-v78scac","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"规则："}]},{"ID":"20240310165136-yiei321","Type":"NodeList","ListData":{},"Properties":{"id":"20240310165136-yiei321","updated":"20240310165136"},"Children":[{"ID":"20240310165136-v0tjc08","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240310165136-v0tjc08","updated":"20240310165136"},"Children":[{"ID":"20240310165136-e72mtwi","Type":"NodeParagraph","Properties":{"id":"20240310165136-e72mtwi","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"一个线程只能有一个协程，即同时只能运行一个协程程序"}]}]},{"ID":"20240310165136-e6ny2fj","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240310165136-e6ny2fj","updated":"20240310165136"},"Children":[{"ID":"20240310165136-slzoj9t","Type":"NodeParagraph","Properties":{"id":"20240310165136-slzoj9t","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"协程返回值应为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Promise"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20240310165136-hq2qgua","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240310165136-hq2qgua","updated":"20240310165136"},"Children":[{"ID":"20240310165136-l1h1yy3","Type":"NodeParagraph","Properties":{"id":"20240310165136-l1h1yy3","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"协程控制关键字只能在协程中使用"}]}]},{"ID":"20240310165136-slj3325","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240310165136-slj3325","updated":"20240310165136"},"Children":[{"ID":"20240310165136-vhl75pm","Type":"NodeParagraph","Properties":{"id":"20240310165136-vhl75pm","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"可将异步函数包装在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Awaitable"},{"Type":"NodeText","Data":"​ 类中，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"co_wait"},{"Type":"NodeText","Data":"​ 关键字调度"}]}]},{"ID":"20240310165136-kdsqi0l","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240310165136-kdsqi0l","updated":"20240310165136"},"Children":[{"ID":"20240310165136-2dg0ylb","Type":"NodeParagraph","Properties":{"id":"20240310165136-2dg0ylb","updated":"20240310165136"},"Children":[{"Type":"NodeText","Data":"无栈协程：所有局部状态都在方法栈中，协程没有分配独立的栈空间"}]}]}]},{"ID":"20240310165136-2nq79d9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310165136-2nq79d9","updated":"20240310165136"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"#include \u003cthread\u003e\n#include \u003ccoroutine\u003e\n#include \u003cfunctional\u003e\n#include \u003cwindows.h\u003e\n\n// 给协程体使用的承诺特征类型\nstruct  CoroutineTraits {        // 名称自定义 |Test|\n    struct promise_type {        // 名称必须为 |promise_type|\n        // 必须实现此接口。(协程体被创建时被调用)\n        auto get_return_object() {\n            return CoroutineTraits{};\n        };\n\n        // 必须实现此接口, 返回值必须为awaitable类型。(get_return_object之后被调用)\n        auto initial_suspend() {\n            return std::suspend_never{};   // never表示继续运行\n            //return std::suspend_always{}; // always表示协程挂起\n        }\n\n        // 必须实现此接口, 返回值必须为awaitable类型。(return_void之后被调用)\n        // MSVC需要声明为noexcept，否则报错\n        auto final_suspend() noexcept {\n            return std::suspend_never{};\n        }\n\n        // 必须实现此接口, 用于处理协程函数内部抛出错误\n        void unhandled_exception() {\n            std::terminate();\n        }\n\n        // 如果协程函数内部无关键字co_return则必须实现此接口。(协程体执行完之后被调用)\n        void return_void() {}\n\n        // 注意：|return_void|和|return_value| 是互斥的。\n        // 如果协程函数内部有关键字co_return则必须实现此接口。(协程体执行完之后被调用)\n        //void return_value() {}\n\n        // 如果协程函数内部有关键字co_yield则必须实现此接口, 返回值必须为awaitable类型\n        auto yield_value(int value) {\n            // _valu=value;     // 可对|value|做一些保存或其他处理\n            return std::suspend_always{};\n        }\n    };\n};\n\n// 协程使用的await对象\nstruct CoroutineAwaitObj {  // 名称自定义 |CoroutineAwaitObj|\n    // await是否已经计算完成，如果返回true，则co_await将直接在当前线程返回\n    bool await_ready() const {\n        return false;\n    }\n\n    // await对象计算完成之后返回结果\n    std::string await_resume() const {\n        return _result;\n    }\n\n    // await对象真正调异步执行的地方，异步完成之后通过handle.resume()来是await返回\n    void await_suspend(const std::coroutine_handle\u003c\u003e handle) {\n        std::jthread([handle, this]() {\n            // 其他操作处理\n            _result = \"Test\";\n\n            // 恢复协程\n            handle.resume();\n                     }).detach();\n    }\n\n    // 将返回值存在这里\n    std::string _result;\n};\n\n// 协程体\n// |CoroutineTraits| 并不是返回值，而是协程的特征类型；不可以是void、string等返回类型\nCoroutineTraits CoroutineFunc() {\n    std::cout \u003c\u003c \"Start CoroutineFunc\" \u003c\u003c std::endl;\n\n    auto ret = co_await CoroutineAwaitObj();\n    std::cout \u003c\u003c \"Return:\" \u003c\u003c ret \u003c\u003c std::endl;\n\n    std::cout \u003c\u003c \"Finish CoroutineFunc\" \u003c\u003c std::endl;\n}\n\nint main(int argc, char* argv[]) {\n    CoroutineFunc();\n\n    Sleep(10*1000);\n\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}