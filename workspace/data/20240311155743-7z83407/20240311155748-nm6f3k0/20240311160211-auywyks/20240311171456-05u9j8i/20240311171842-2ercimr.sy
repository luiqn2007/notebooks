{"ID":"20240311171842-2ercimr","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f4e6","id":"20240311171842-2ercimr","title":"基于类型的匹配","updated":"20240311171920"},"Children":[{"ID":"20240311171854-a3i5870","Type":"NodeParagraph","Properties":{"id":"20240311171854-a3i5870","updated":"20240311171854"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"index"},{"Type":"NodeText","Data":"​ 指定第几个参数，如果值为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bean"},{"Type":"NodeText","Data":"​ 对象引用，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ref"},{"Type":"NodeText","Data":"​ 指定 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"id"},{"Type":"NodeText","Data":"​；如果是简单的 Java 类型（基本类型、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"String"},{"Type":"NodeText","Data":"​），则使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"value"},{"Type":"NodeText","Data":"​ 指定值字面量。"}]},{"ID":"20240311171920-qjpjckp","Type":"NodeParagraph","Properties":{"id":"20240311171920-qjpjckp","updated":"20240311171920"},"Children":[{"Type":"NodeText","Data":"当几个参数之间没有继承关系时，可以直接引用对象，Spring 可以根据类型判断实参位置。"}]},{"ID":"20240311171920-lgvjib5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311171920-lgvjib5","updated":"20240311171920"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"// 仅截取构造函数\npublic ServiceTemplate(JmsMessageSender jmsMessageSender, \n\t\t\t\t\t   EmailMessageSender emailMessageSender, \n\t\t\t\t\t   WebServiceInvoker webServiceInvoker) {  \n    this.jmsMessageSender = jmsMessageSender;  \n    this.emailMessageSender = emailMessageSender;  \n    this.webServiceInvoker = webServiceInvoker;  \n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311171920-jp418gf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311171920-jp418gf","updated":"20240311171920"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"eG1s"},{"Type":"NodeCodeBlockCode","Data":"\u003c!-- 仅 ServiceTemplate 的 bean 节选 --\u003e\n\u003cbean id=\"serviceTemplate\" class=\"com.example.mybank.chapter03.service.ServiceTemplate\"\u003e\n    \u003cconstructor-arg ref=\"webServiceInvoker\" /\u003e\n    \u003cconstructor-arg ref=\"jmsMessageSender\" /\u003e\n    \u003cconstructor-arg ref=\"emailMessageSender\" /\u003e\n\u003c/bean\u003e\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311171920-ofrc3cu","Type":"NodeParagraph","Properties":{"id":"20240311171920-ofrc3cu","updated":"20240311171920"},"Children":[{"Type":"NodeText","Data":"上面的例子中，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"webServiceInvoker"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"jmsMessageSender"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"emailMessageSender"},{"Type":"NodeText","Data":"​ 三个参数的顺序与构造函数的顺序不同，且没有使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"index"},{"Type":"NodeText","Data":"​ 等参数限定顺序，但 Spring 能正确初始化，因为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"JmsMessageSender"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"EmailMessageSender"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"WebServiceInvoker"},{"Type":"NodeText","Data":"​ 三个类没有继承关系，Spring 能正确识别每个参数的位置。"}]},{"ID":"20240311171920-z4en8pv","Type":"NodeParagraph","Properties":{"id":"20240311171920-z4en8pv","updated":"20240311171920"},"Children":[{"Type":"NodeText","Data":"若两个参数类型有继承关系，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":"​ 属性确定类型"}]},{"ID":"20240311171920-ggvusyx","Type":"NodeParagraph","Properties":{"id":"20240311171920-ggvusyx","updated":"20240311171920"},"Children":[{"Type":"NodeText","Data":"若存在多个参数类型相同，则应使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"index"},{"Type":"NodeText","Data":"​ 而非 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":"​"}]}]}