{"ID":"20240311180347-ej9vcbz","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240311180347-ej9vcbz","title":"Decoder","updated":"20240311180445"},"Children":[{"ID":"20240311180358-9cbipdg","Type":"NodeParagraph","Properties":{"id":"20240311180358-9cbipdg","updated":"20240311180358"},"Children":[{"Type":"NodeText","Data":"类似于 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"TCP/IP"},{"Type":"NodeText","Data":"​ 等基于流的传输方法，每次连接都是接收一系列字节包。若传输过程中进行了拆分，一次 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"channelRead"},{"Type":"NodeText","Data":"​ 接收的数据可能是不完整的。且即使发送端通过多次 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"flush"},{"Type":"NodeText","Data":"​ 发送数据，每次接收的也不一定是与每次发送的相同，只能保证最后所有的字节连接起来是相同的"}]},{"ID":"20240311180358-x6kts0h","Type":"NodeParagraph","Properties":{"id":"20240311180358-x6kts0h","updated":"20240311180358"},"Children":[{"Type":"NodeText","Data":"比如，发送一条信息 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ABCDEFGHI"},{"Type":"NodeText","Data":"​，可能发送的过程被拆分成多个部分如下："}]},{"ID":"20240311180414-pk4gltp","Type":"NodeParagraph","Properties":{"id":"20240311180414-pk4gltp","updated":"20240311180414"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"Pasted image 20230902124645"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/Pasted image 20230902124645-20240311180414-27z550o.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240311180358-vyeox68","Type":"NodeParagraph","Properties":{"id":"20240311180358-vyeox68","updated":"20240311180358"},"Children":[{"Type":"NodeText","Data":"但多次 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"channelRead"},{"Type":"NodeText","Data":"​ 中，每次接收的数据可能是："}]},{"ID":"20240311180425-cfxn01i","Type":"NodeParagraph","Properties":{"id":"20240311180425-cfxn01i","updated":"20240311180425"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"Pasted image 20230902124706"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/Pasted image 20230902124706-20240311180425-hjuvo99.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240311180358-4e333vb","Type":"NodeParagraph","Properties":{"id":"20240311180358-4e333vb","updated":"20240311180445"},"Children":[{"Type":"NodeText","Data":"网络传输只能保证最后接收的数据一定是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ABCDEFGHI"},{"Type":"NodeText","Data":"​，因此需要在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Handler"},{"Type":"NodeText","Data":"​ 中合并。示例中使用了以下生命周期方法进行初始化和释放资源"}]},{"ID":"20240311180358-i3ij5b3","Type":"NodeList","ListData":{},"Properties":{"id":"20240311180358-i3ij5b3","updated":"20240311180358"},"Children":[{"ID":"20240311180358-jbhj493","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240311180358-jbhj493","updated":"20240311180358"},"Children":[{"ID":"20240311180358-0c55a71","Type":"NodeParagraph","Properties":{"id":"20240311180358-0c55a71","updated":"20240311180358"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"handleAdded"},{"Type":"NodeText","Data":"​：当连接加入 Netty 事件序列时调用"}]}]},{"ID":"20240311180358-lpnnj7v","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240311180358-lpnnj7v","updated":"20240311180358"},"Children":[{"ID":"20240311180358-wpmj7wn","Type":"NodeParagraph","Properties":{"id":"20240311180358-wpmj7wn","updated":"20240311180358"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"handlerRemoved"},{"Type":"NodeText","Data":"​：当连接从 Netty 事件序列移除时调用"}]}]}]},{"ID":"20240311180358-hb0cggj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311180358-hb0cggj","updated":"20240311180358"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public class ComposeBufferHandler extends ChannelInboundHandlerAdapter {\n\n    private ByteBuf buffer;\n  \n    @Override\n    public void handlerAdded(ChannelHandlerContext ctx) {\n        buffer = ctx.alloc().buffer();\n    }\n\n    @Override\n    public void handlerRemoved(ChannelHandlerContext ctx) {\n        ReferenceCountUtil.release(buffer);\n        buffer = null;\n    }\n\n    @Override\n    public void channelRead(ChannelHandlerContext ctx, Object msg) {\n        buffer.writeBytes((ByteBuf) msg);\n        ReferenceCountUtil.release(msg);\n    }\n\n    @Override\n    public void channelReadComplete(ChannelHandlerContext ctx) {\n        // 数据读取完成，使用数据\n        System.out.println(buffer.toString());\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}