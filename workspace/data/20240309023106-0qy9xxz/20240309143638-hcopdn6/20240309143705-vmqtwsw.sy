{"ID":"20240309143705-vmqtwsw","Spec":"1","Type":"NodeDocument","Properties":{"custom-LanguageVersion":"Java9","icon":"1f578-fe0f","id":"20240309143705-vmqtwsw","title":"Jigsaw 模块","updated":"20240309171843"},"Children":[{"ID":"20240309143705-tbe6qzj","Type":"NodeParagraph","Properties":{"id":"20240309143705-tbe6qzj","updated":"20240309165027"},"Children":[{"Type":"NodeText","Data":"在包 package 之上增加一级 模块 module，声明依赖及开放接口，于 Java9 引入。"}]},{"ID":"20240309165028-fsk658q","Type":"NodeParagraph","Properties":{"id":"20240309165028-fsk658q","updated":"20240309171843"},"Children":[{"Type":"NodeText","Data":"模块的定义在文件 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"module-info.java"},{"Type":"NodeText","Data":"​ 中。该文件类似 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"package-info.java"},{"Type":"NodeText","Data":"​，仅用于描述包信息："}]},{"ID":"20240309170505-esmlt4p","Type":"NodeTable","TableAligns":[0,0,0],"Properties":{"colgroup":"min-width: 60px;|width: 396px;|min-width: 60px;","id":"20240309170505-esmlt4p","updated":"20240309171817"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"关键字"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"用法"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"说明"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Properties":{"colspan":"1","rowspan":"2"},"Children":[{"Type":"NodeKramdownSpanIAL","Data":"{: colspan=\"1\" rowspan=\"2\"}"},{"Type":"NodeText","Data":"module"},{"Type":"NodeBr","Data":"br"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"module 模块名 { ... }"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"声明一个模块"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Properties":{"class":"fn__none"},"Children":[{"Type":"NodeKramdownSpanIAL","Data":"{: class=\"fn__none\"}"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"open module 模块名 { ... }"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"允许从模块外通过反射访问模块内的任意内容"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Properties":{"colspan":"1","rowspan":"3"},"Children":[{"Type":"NodeKramdownSpanIAL","Data":"{: colspan=\"1\" rowspan=\"3\"}"},{"Type":"NodeText","Data":"requires"},{"Type":"NodeBr","Data":"br"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"module 模块A { requires 模块B; }"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"声明模块 A 依赖于模块 B"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Properties":{"class":"fn__none"},"Children":[{"Type":"NodeKramdownSpanIAL","Data":"{: class=\"fn__none\"}"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"module 模块A { requires static 模块B; }"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"声明静态依赖：仅编译时依赖"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Properties":{"class":"fn__none"},"Children":[{"Type":"NodeKramdownSpanIAL","Data":"{: class=\"fn__none\"}"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"module 模块A { requires transitive 模块B; }"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"声明传递依赖：所有依赖模块 A 的模块也直接依赖模块 B"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"uses"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"module 模块A { uses 接口名; }"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"声明模块依赖于 service.Interface 接口或抽象类"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Properties":{"colspan":"1","rowspan":"2"},"Children":[{"Type":"NodeKramdownSpanIAL","Data":"{: colspan=\"1\" rowspan=\"2\"}"},{"Type":"NodeText","Data":"exports"},{"Type":"NodeBr","Data":"br"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"module 模块名 { exports 包名; }"},{"Type":"NodeText","Data":"​"},{"Type":"NodeBr","Data":"br"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"声明该模块公开某个包（package）"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Properties":{"class":"fn__none"},"Children":[{"Type":"NodeKramdownSpanIAL","Data":"{: class=\"fn__none\"}"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"module 模块名 { exports 包A to 包B; }"},{"Type":"NodeText","Data":"​"},{"Type":"NodeBr","Data":"br"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"声明对包B公开包A（package）"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"providers"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"module 模块名 { providers 接口类 with 实现类; }"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"声明提供一个 service.Interface 服务，提供接口（或抽象类）名及其实现类"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Properties":{"colspan":"1","rowspan":"2"},"Children":[{"Type":"NodeKramdownSpanIAL","Data":"{: colspan=\"1\" rowspan=\"2\"}"},{"Type":"NodeText","Data":"opens"},{"Type":"NodeBr","Data":"br"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"module 模块名 { opens 包名; }"},{"Type":"NodeText","Data":"​"},{"Type":"NodeBr","Data":"br"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"声明允许反射访问某个包（package）"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Properties":{"class":"fn__none"},"Children":[{"Type":"NodeKramdownSpanIAL","Data":"{: class=\"fn__none\"}"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"module 模块名 { opens 包A to 包B; }"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"声明包B内的代码可以反射访问包A（package）"}]}]}]},{"ID":"20240309143800-eenvpyt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240309143800-eenvpyt","updated":"20240309170459"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"open module myModuleName {\n    // 依赖于 module.requires1.name 模块\n    requires module.requires1.name;\n    // 静态依赖：仅编译时依赖于 module.requires2.name 模块\n    requires static module.requires2.name;\n    // 传递依赖：依赖于该模块的其他模块也能直接使用 module.requires3.name 模块\n    requires transitive module.requires2.name;\n  \n    // 开放 package.exports1.name 包对任意依赖于该模块的程序访问\n    exports package.exports1.name;\n    // 仅对 package.special 模块开放 package.exports2.name 包\n    exports package.exports2.name to package.special;\n  \n    // 依赖于 service.Interface 服务接口或抽象类\n    uses service.Interface;\n  \n    // 提供 service.Interface 服务的一个实现 service.InterfaceImpl\n    // 服务仍通过 ServiceLoader.load 获取\n    providers service.Interface with service.InterfaceImpl;\n  \n    // 开放 package.open1.name 包对任意依赖于该模块的程序反射访问\n    opens package.open1.name;\n    // 仅对 module.special1, module.special2, module.special3 模块开放 package.open2.name 包反射访问\n    opens package.open2.name to module.special1, module.special2, module.special3;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240309144425-nydzh4e","Type":"NodeParagraph","Properties":{"id":"20240309144425-nydzh4e"}}]}