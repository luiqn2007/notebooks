{"ID":"20240310012210-h9ziant","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2328-fe0f","id":"20240310012210-h9ziant","title":"初始化","updated":"20240310012229"},"Children":[{"ID":"20240310012210-v2p6tol","Type":"NodeParagraph","Properties":{"id":"20240310012210-v2p6tol","updated":"20240310012217"},"Children":[{"Type":"NodeText","Data":"在值类型和指针类型变量在声明时便会初始化默认值，全局中为数值 0 或其等价的值（"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"'\\0'"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nullptr"},{"Type":"NodeText","Data":"​ 等），类，结构体等会使用无参构造进行初始化，局部则为随机值。建议在声明后手动初始化。"}]},{"ID":"20240310012219-ze7raih","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310012219-ze7raih","updated":"20240310012223"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"int a = 10;\nint b (10);\nint c {10};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310012228-13joftg","Type":"NodeParagraph","Properties":{"id":"20240310012228-13joftg","updated":"20240310012228"},"Children":[{"Type":"NodeText","Data":"这三种方法初始化方式都可以，但推荐使用第三种，使用初始化列表可以统一所有类型的初始化。"}]},{"ID":"20240310012229-iumzjlv","Type":"NodeParagraph","Properties":{"id":"20240310012229-iumzjlv"}}]}