{"ID":"20240310150515-ksccl6h","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2328-fe0f","id":"20240310150515-ksccl6h","title":"类","updated":"20240310214351"},"Children":[{"ID":"20240310150517-5pxba9y","Type":"NodeParagraph","Properties":{"id":"20240310150517-5pxba9y","updated":"20240310214010"},"Children":[{"Type":"NodeText","Data":"类是一种实现 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"OOP"},{"Type":"NodeText","Data":"​​ 继承、封装、多态特性的"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240309023034-yq5ekrb","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"结构"},{"Type":"NodeText","Data":"，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"class"},{"Type":"NodeText","Data":"​​ 关键字定义。"}]},{"ID":"20240310154725-qeqjv6s","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310154725-qeqjv6s","updated":"20240310154729"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"class Box {\npublic:\n    double width;\n    double height;\n    double length { 5.0 };\n};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310154738-c9d123u","Type":"NodeParagraph","Properties":{"id":"20240310154738-c9d123u","updated":"20240310154738"},"Children":[{"Type":"NodeText","Data":"声明的类可通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"{}"},{"Type":"NodeText","Data":"​ 初始化对象"}]},{"ID":"20240310154738-joh4a4t","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310154738-joh4a4t","updated":"20240310154810"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"#include\u003ciostream\u003e\n\nusing namespace std;\n\nclass Box {\npublic:\n    double width;\n    double height;\n    // 默认值为 5.0\n    double length { 5.0 };\n    // 可使用 Box::int_type 访问\n    typedef int int_type;\n\n    void print() {\n        cout \u003c\u003c \"Box: width=\" \u003c\u003c width \u003c\u003c \", height=\" \u003c\u003c height \u003c\u003c \", length=\" \u003c\u003c length \u003c\u003c endl;\n    }\n};\n\nint main() {\n    Box b1 {};\n    Box b2 {1, 2};\n    Box b3 {1, 2, 3};\n\n    // Box: width=0, height=0, length=5\n    b1.print();\n    // Box: width=1, height=2, length=5\n    b2.print();\n    // Box: width=1, height=2, length=3\n    b3.print();\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310154738-47li0m2","Type":"NodeParagraph","Properties":{"id":"20240310154738-47li0m2","updated":"20240310154738"},"Children":[{"Type":"NodeText","Data":"类中的函数可以在类中定义，也可以在类外定义，在类内定义的函数默认是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"inline"},{"Type":"NodeText","Data":"​ 的，该类函执行速度更快，但也会使类更臃肿。一般比较简单的函数写在类中。当然，也可以给函数手动添加 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"inline"},{"Type":"NodeText","Data":"​ 关键字声明该函数是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"inline"},{"Type":"NodeText","Data":"​ 的。"}]},{"ID":"20240310154738-aj0klce","Type":"NodeParagraph","Properties":{"id":"20240310154738-aj0klce","updated":"20240310214351"},"Children":[{"Type":"NodeText","Data":"一般来说，类的声明在"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310115555-blpnf2u","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"头文件"},{"Type":"NodeText","Data":"中；而函数实现等在"},{"Type":"NodeTextMark","TextMarkType":"inline-memo","TextMarkInlineMemoContent":"通常是 .cpp 文件","TextMarkTextContent":"源文件"},{"Type":"NodeText","Data":"中。"}]},{"ID":"20240310154738-dair9ct","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310154738-dair9ct","updated":"20240310154804"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"class TwoInt {\npublic:\n    int a;\n    int b;\n\n    inline int max() const;\n\n    int sum() const\n    {\n        return a + b;\n    }\n\n    int all_sum(int c, int d) const;\n};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310154738-l5n1d7x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310154738-l5n1d7x","updated":"20240310154738"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"#include \"twoint.h\"\n\nint TwoInt::max() const {\n    return this-\u003ea + this-\u003eb;\n}\n\nint TwoInt::all_sum(int c, int d) const {\n    return sum() + c + d;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310154835-rfpxehp","Type":"NodeParagraph","Properties":{"id":"20240310154835-rfpxehp"}}]}