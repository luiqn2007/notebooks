{"ID":"20240310144341-1bv7zfo","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2620-fe0f","id":"20240310144341-1bv7zfo","title":"指针运算","updated":"20240310205155"},"Children":[{"ID":"20240310144351-vbaql40","Type":"NodeParagraph","Properties":{"id":"20240310144351-vbaql40","updated":"20240310205155"},"Children":[{"Type":"NodeText","Data":"指针本身允许进行 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240310013540-fm19gr9","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"+"},{"Type":"NodeText","Data":"​​/"},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240310013540-fm19gr9","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"-"},{"Type":"NodeText","Data":"​​ 等算术运算："}]},{"ID":"20240310144351-skyfbtk","Type":"NodeList","ListData":{},"Properties":{"id":"20240310144351-skyfbtk","updated":"20240310205121"},"Children":[{"ID":"20240310144351-pv01ygf","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240310144351-pv01ygf","updated":"20240310205114"},"Children":[{"ID":"20240310144351-59pa86y","Type":"NodeParagraph","Properties":{"id":"20240310144351-59pa86y","updated":"20240310205114"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"指针 +/- 数字"},{"Type":"NodeText","Data":"​：将指针地址加/减 n 个对应类型的长度"}]}]},{"ID":"20240310144351-kt4o0ut","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240310144351-kt4o0ut","updated":"20240310205121"},"Children":[{"ID":"20240310144351-n50hopa","Type":"NodeParagraph","Properties":{"id":"20240310144351-n50hopa","updated":"20240310205121"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"指针 - 指针"},{"Type":"NodeText","Data":"​：将指针地址相减，并将结果除以类型长度"}]}]}]},{"ID":"20240310144351-mcm4r1x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310144351-mcm4r1x","updated":"20240310144351"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"int value = 10;\nint *pvalue = { \u0026value };\nint *pnext = pvalue + 1; // 地址为 pvalue + 1 * sizeof(int)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310145109-0kv6kc1","Type":"NodeParagraph","Properties":{"id":"20240310145109-0kv6kc1","updated":"20240310145109"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"void*"},{"Type":"NodeText","Data":"​ 类型可以转换为任何指针类型，但不能使用指针运算"}]},{"ID":"20240310145109-svm657x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310145109-svm657x","updated":"20240310145109"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"int main() {\n    int arr[]{0, 1, 2, 3, 4};\n    int *parr = arr;\n\n    // parr     = 0x81b0fffa00 = 0\n    cout \u003c\u003c \"parr     = \" \u003c\u003c parr \u003c\u003c \" = \" \u003c\u003c *arr \u003c\u003c endl;\n    // parr + 1 = 0x81b0fffa04 = 1\n    cout \u003c\u003c \"parr + 1 = \" \u003c\u003c (parr+1) \u003c\u003c \" = \" \u003c\u003c *(arr+1) \u003c\u003c endl;\n    // parr + 2 = 0x81b0fffa08 = 2\n    cout \u003c\u003c \"parr + 2 = \" \u003c\u003c (parr+2) \u003c\u003c \" = \" \u003c\u003c *(arr+2) \u003c\u003c endl;\n\n    void *parr2 = parr;\n    long long *parr2l = static_cast\u003clong long *\u003e(parr2);\n\n    // parr + 1L= 0x81b0fffa08 = 2\n    // 转换成 long long* 类型，每次运算偏移量为 sizeof(long long) = 8\n    // 因此 parr2l+1 == parr+2\n    // 在输出时候，重新强转回 int*，否则结果会出错\n    cout \u003c\u003c \"parr + 1L= \" \u003c\u003c (parr2l+1) \u003c\u003c \" = \" \u003c\u003c *(int*)(void*)(parr2l+1) \u003c\u003c endl;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}