{"ID":"20240311235643-kp1dvg7","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2620-fe0f","id":"20240311235643-kp1dvg7","tags":"C++20","title":"explicit(bool)","updated":"20240311235959"},"Children":[{"ID":"20240311235653-r8k6299","Type":"NodeParagraph","Properties":{"id":"20240311235653-r8k6299","updated":"20240311235905"},"Children":[{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240311112119-lq2fdt4","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"explicit"},{"Type":"NodeText","Data":" 允许接受一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bool"},{"Type":"NodeText","Data":"​ 常量表达式，指定 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"explicit"},{"Type":"NodeText","Data":"​ 修饰的功能是否生效。"}]},{"ID":"20240311235653-p0md1by","Type":"NodeParagraph","Properties":{"id":"20240311235653-p0md1by","updated":"20240311235653"},"Children":[{"Type":"NodeText","Data":"首先，观察下面的代码："}]},{"ID":"20240311235944-hswfi45","Type":"NodeSuperBlock","Properties":{"id":"20240311235944-hswfi45","updated":"20240311235945"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240311235653-jv09791","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311235653-jv09791","updated":"20240311235945"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"pair\u003cstring, string\u003e safe(const char* first, const char* second) {\n    return {first, second};\n}\n\npair\u003cvector\u003cint\u003e, vector\u003cint\u003e\u003e unsafe(int first, int second) {\n    return {first, second};\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311235653-3kdr842","Type":"NodeParagraph","Properties":{"id":"20240311235653-3kdr842","updated":"20240311235945"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unsafe"},{"Type":"NodeText","Data":"​ 编译失败。这是符合直觉的 - "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"const char*"},{"Type":"NodeText","Data":"​ 可以转化为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"string"},{"Type":"NodeText","Data":"​，但 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"int"},{"Type":"NodeText","Data":"​ 不能转换为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"vector\u0026lt;int\u0026gt;"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240311235653-uu8p9g4","Type":"NodeParagraph","Properties":{"id":"20240311235653-uu8p9g4","updated":"20240311235653"},"Children":[{"Type":"NodeText","Data":"现在看看这是如何实现的。首先考虑是因为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"vector(T...)"},{"Type":"NodeText","Data":"​ 构造函数被 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"explicit"},{"Type":"NodeText","Data":"​ 修饰，但实际上并不是，因为 pair 构造中为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"first"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"second"},{"Type":"NodeText","Data":"​ 赋值是通过间接构造完成，在构造时是显式调用的构造函数，不受 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"explicit"},{"Type":"NodeText","Data":"​ 影响。"}]},{"ID":"20240311235653-an61bqw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311235653-an61bqw","updated":"20240311235653"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cclass F, class S\u003e\nclass MyPair {\n    F _f;\n    S _s;\npublic:\n    template\u003cclass _F, class _S\u003e\n    // 显式调用构造函数\n    MyPair(_F \u0026f, _S \u0026s): _f(f), _s(s) {\n    }\n};\n\nMyPair\u003cvector\u003cint\u003e, vector\u003cint\u003e\u003e unsafe(int first, int second) {\n    return {first, second};\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311235653-o8ipw9o","Type":"NodeParagraph","Properties":{"id":"20240311235653-o8ipw9o","updated":"20240311235653"},"Children":[{"Type":"NodeText","Data":"若要解决这个问题，我们可以给 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MyFirst"},{"Type":"NodeText","Data":"​ 的构造函数添加 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"explicit"},{"Type":"NodeText","Data":"​ 修饰以禁用该构造函数："}]},{"ID":"20240311235653-9cwle4c","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311235653-9cwle4c","updated":"20240311235653"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cclass F, class S\u003e\nclass MyPair {\n    F _f;\n    S _s;\npublic:\n    template\u003cclass _F, class _S\u003e\n    // 显式调用构造函数\n    explicit MyPair(_F \u0026f, _S \u0026s): _f(f), _s(s) {\n    }\n};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311235653-8hixpfp","Type":"NodeParagraph","Properties":{"id":"20240311235653-8hixpfp","updated":"20240311235653"},"Children":[{"Type":"NodeText","Data":"但这样 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"safe"},{"Type":"NodeText","Data":"​ 函数也不能正常完成编译了。这时候考虑使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SFINAE"},{"Type":"NodeText","Data":"​ 进行条件编译"}]},{"ID":"20240311235653-8yv8kh5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311235653-8yv8kh5","updated":"20240311235653"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cclass F, class S\u003e\nclass MyPair {\n    F _f;\n    S _s;\npublic:\n    template\u003cclass _F = F, class _S = S\u003e\n    // 约束：\n    //    1. F 可通过 _F 构造，S 可通过 _S 构造\n    //    2. _F 可转换为 F，_S 可转换为 S\n    requires is_constructible_v\u003cF, _F\u003e \u0026\u0026 is_constructible_v\u003cS, _S\u003e \n          \u0026\u0026 is_convertible_v\u003c_F, F\u003e   \u0026\u0026 is_convertible_v\u003c_S, S\u003e\n    MyPair(_F \u0026f, _S \u0026s): _f(f), _s(s) {\n    }\n  \n    template\u003cclass _F = F, class _S = S\u003e\n    requires is_constructible_v\u003cF, _F\u003e \u0026\u0026 is_constructible_v\u003cS, _S\u003e\n    explicit MyPair(_F\u0026\u0026, _S\u0026\u0026);\n};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311235653-a8jfenb","Type":"NodeParagraph","Properties":{"id":"20240311235653-a8jfenb","updated":"20240311235653"},"Children":[{"Type":"NodeText","Data":"此时，可通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"explicit"},{"Type":"NodeText","Data":"​ 进行开关控制："}]},{"ID":"20240311235653-w047h42","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311235653-w047h42","updated":"20240311235653"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cclass F, class S\u003e\nclass MyPair {\n    F _f;\n    S _s;\npublic:\n    template\u003cclass _F = F, class _S = S\u003e\n    requires  is_constructible_v\u003cF, _F\u003e \u0026\u0026  is_constructible_v\u003cS, _S\u003e\n    explicit(!is_convertible_v\u003c_F, F\u003e   || !is_convertible_v\u003c_S, S\u003e)\n    MyPair(_F \u0026f, _S \u0026s): _f(f), _s(s) {\n    }\n};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311235959-txhsxrf","Type":"NodeParagraph","Properties":{"id":"20240311235959-txhsxrf"}}]}