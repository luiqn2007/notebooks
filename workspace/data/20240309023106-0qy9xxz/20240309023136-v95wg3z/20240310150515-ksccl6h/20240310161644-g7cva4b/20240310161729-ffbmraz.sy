{"ID":"20240310161729-ffbmraz","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2328-fe0f","id":"20240310161729-ffbmraz","title":"初始化列表","updated":"20240310214657"},"Children":[{"ID":"20240310161735-8ii4zm2","Type":"NodeParagraph","Properties":{"id":"20240310161735-8ii4zm2","updated":"20240310214605"},"Children":[{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310184029-mq32u1b","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"构造函数"},{"Type":"NodeText","Data":"中可以使用初始化列表为类成员变量赋值，而不必显式赋值"}]},{"ID":"20240310161735-hobhf9m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310161735-hobhf9m","updated":"20240310161735"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"class A {\n    public:\n    int value;\n  \n    A(int v): value {v} {};\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310161735-ny5afe5","Type":"NodeParagraph","Properties":{"id":"20240310161735-ny5afe5","updated":"20240310214609"},"Children":[{"Type":"NodeText","Data":"上面例子中 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"value {v}"},{"Type":"NodeText","Data":"​ 就是初始化列表。以 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":","},{"Type":"NodeText","Data":"​ 分割，可以为函数成员变量直接赋值。"}]},{"ID":"20240310214609-ptetj57","Type":"NodeParagraph","Properties":{"id":"20240310214609-ptetj57","updated":"20240310214657"},"Children":[{"Type":"NodeText","Data":"初始化列表赋值是在构造函数函数体运行之前进行的，因此构造函数中可以访问到初始化列表赋的值。"}]}]}