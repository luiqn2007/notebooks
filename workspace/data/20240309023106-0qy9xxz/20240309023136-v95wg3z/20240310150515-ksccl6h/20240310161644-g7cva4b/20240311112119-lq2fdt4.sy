{"ID":"20240311112119-lq2fdt4","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2620-fe0f","id":"20240311112119-lq2fdt4","tags":"C++11","title":"explicit","updated":"20240311223524"},"Children":[{"ID":"20240311223524-1q9nwce","Type":"NodeParagraph","Properties":{"id":"20240311223524-1q9nwce","updated":"20240311223524"},"Children":[{"Type":"NodeText","Data":"C++11 之前，"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310160407-v29pzds","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"隐式类型转换"},{"Type":"NodeText","Data":"可能出现很多奇怪的问题："}]},{"ID":"20240311223524-ir05whz","Type":"NodeBlockquote","Properties":{"id":"20240311223524-ir05whz","updated":"20240311223524"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20240311223524-p6nbcoy","Type":"NodeSuperBlock","Properties":{"id":"20240311223524-p6nbcoy","updated":"20240311223524"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240311223524-k4pbtkk","Type":"NodeSuperBlock","Properties":{"id":"20240311223524-k4pbtkk","updated":"20240311223524"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240311223524-dg0fuj9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311223524-dg0fuj9","updated":"20240311223524"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"// 例1\ntemplate\u003cclass T\u003e\nclass Storage {\nprivate:\n    vector\u003cT\u003e data;\npublic:\n    operator bool() const { return data.empty(); }\n};\n\nint main() {\n    Storage\u003cchar\u003e a;\n    Storage\u003cdouble\u003e b;\n    // 0\n    auto c = a + b;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311223524-c57gy2i","Type":"NodeParagraph","Properties":{"id":"20240311223524-c57gy2i","updated":"20240311223524"},"Children":[{"Type":"NodeText","Data":"例1，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"c=a+b"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"a"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"b"},{"Type":"NodeText","Data":"​ 本身应该不允许直接相加，但隐式转换为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bool"},{"Type":"NodeText","Data":"​ 后可以添加。"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240311223524-das65h8","Type":"NodeSuperBlock","Properties":{"id":"20240311223524-das65h8","updated":"20240311223524"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240311223524-tif0ty1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311223524-tif0ty1","updated":"20240311223524"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"// 例2\nclass SomeString {\n    friend void PrintStr(const SomeString\u0026 str);\npublic:\n    SomeString(const char* s) {}\n    SomeString(int alloc_size) {}\n};\n\nvoid PrintStr(const SomeString\u0026 str) {}\n\nint main() {\n    PrintStr(\"Hello World\");\n    PrintStr(42);\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311223524-jkkddrs","Type":"NodeParagraph","Properties":{"id":"20240311223524-jkkddrs","updated":"20240311223524"},"Children":[{"Type":"NodeText","Data":"例2，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"PrintStr"},{"Type":"NodeText","Data":"​ 函数接受字符串，当传入数字时，隐式转换成了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SomeString"},{"Type":"NodeText","Data":"​，但本意非如此。"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"Type":"NodeSuperBlockCloseMarker"}]}]},{"ID":"20240311223524-3gjd9hf","Type":"NodeParagraph","Properties":{"id":"20240311223524-3gjd9hf","updated":"20240311223524"},"Children":[{"Type":"NodeText","Data":"C++11 新增 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"explicit"},{"Type":"NodeText","Data":"​ 声明，必须显式类型转换"}]},{"ID":"20240311223524-dwu17pl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311223524-dwu17pl","updated":"20240311223524"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cclass T\u003e\nclass Storage {\nprivate:\n    vector\u003cT\u003e data;\npublic:\n    explicit operator bool() const { return data.empty(); }\n};\n\nint main() {\n    Storage\u003cchar\u003e a;\n    Storage\u003cdouble\u003e b;\n    // Invalid operands to binary expression ('Storage\u003cchar\u003e' and 'Storage\u003cdouble\u003e')\n    auto c = a + b;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311223524-enmjat6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311223524-enmjat6","updated":"20240311223524"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"class SomeString {\n    friend void PrintStr(const SomeString\u0026 str);\npublic:\n    SomeString(const char* s) {}\n    explicit SomeString(int alloc_size) {}\n};\n\nvoid PrintStr(const SomeString\u0026 str) {}\n\nint main() {\n    PrintStr(\"Hello World\");\n    // No matching function for call to 'PrintStr'\n    PrintStr(42);\n    // ok\n    PrintStr(static_cast\u003cSomeString\u003e(42));\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311223524-nbtnrca","Type":"NodeParagraph","Properties":{"id":"20240311223524-nbtnrca","updated":"20240311223524"}}]}