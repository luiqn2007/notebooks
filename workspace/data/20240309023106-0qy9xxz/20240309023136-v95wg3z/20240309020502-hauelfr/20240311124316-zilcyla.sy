{"ID":"20240311124316-zilcyla","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2620-fe0f","id":"20240311124316-zilcyla","tags":"C++20","title":"consteval","updated":"20240311124350"},"Children":[{"ID":"20240311124324-t1bhi0t","Type":"NodeParagraph","Properties":{"id":"20240311124324-t1bhi0t","updated":"20240311124350"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"consteval"},{"Type":"NodeText","Data":"​ 说明符用于声明立即"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310114414-28d3ogf","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"函数"},{"Type":"NodeText","Data":"，表示对应函数必须在"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240309020502-hauelfr","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"编译期"},{"Type":"NodeText","Data":"执行。"}]},{"ID":"20240311124324-9mqw8vx","Type":"NodeParagraph","Properties":{"id":"20240311124324-9mqw8vx","updated":"20240311124324"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"consteval"},{"Type":"NodeText","Data":"​ 与 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"constexpr"},{"Type":"NodeText","Data":"​ 的区别在于："}]},{"ID":"20240311124324-jpqbzep","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240311124324-jpqbzep","updated":"20240311124324"},"Children":[{"ID":"20240311124324-ib8wwsg","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240311124324-ib8wwsg","updated":"20240311124324"},"Children":[{"ID":"20240311124324-nh7et9m","Type":"NodeParagraph","Properties":{"id":"20240311124324-nh7et9m","updated":"20240311124324"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"consteval"},{"Type":"NodeText","Data":"​ 只能修饰函数，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"constexpr"},{"Type":"NodeText","Data":"​ 还可以修饰变量、"}]}]},{"ID":"20240311124324-y0la3ng","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240311124324-y0la3ng","updated":"20240311124324"},"Children":[{"ID":"20240311124324-gmj1brw","Type":"NodeParagraph","Properties":{"id":"20240311124324-gmj1brw","updated":"20240311124324"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"constexpr"},{"Type":"NodeText","Data":"​ 修饰的函数不依赖于编译上下文，在非常量表达式中表现为普通函数；"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"consteval"},{"Type":"NodeText","Data":"​ 修饰的函数必须在编译期执行，编译期无法完成计算的会产生异常"}]}]}]},{"ID":"20240311124324-7hmodmp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311124324-7hmodmp","updated":"20240311124324"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"constexpr int sqr_expr(int x) {\n    return x * x;\n}\n\nconsteval int sqr_eval(int x) {\n    return x * x;\n}\n\n// 都没问题\nint a1 = sqr_eval(100);\nint a2 = sqr_expr(100);\n\nint b = 100;\n// error: the value of 'b' is not usable in a constant expression\nint b1 = sqr_eval(b);\n// 没问题\nint b2 = sqr_expr(b);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}