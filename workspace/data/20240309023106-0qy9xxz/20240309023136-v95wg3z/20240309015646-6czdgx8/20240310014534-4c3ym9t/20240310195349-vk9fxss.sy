{"ID":"20240310195349-vk9fxss","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2620-fe0f","id":"20240310195349-vk9fxss","title":"if constexpr","updated":"20240311124150"},"Children":[{"ID":"20240311123958-hfx5cyx","Type":"NodeParagraph","Properties":{"id":"20240311123958-hfx5cyx","updated":"20240311124051"},"Children":[{"Type":"NodeText","Data":"C++17 的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"if constexpr"},{"Type":"NodeText","Data":"​ 类似 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#if"},{"Type":"NodeText","Data":"​，可用于编写紧凑的模板代码，根据"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240309020502-hauelfr","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"编译时"},{"Type":"NodeText","Data":"条件进行实例化。"}]},{"ID":"20240311123958-it23kra","Type":"NodeList","ListData":{},"Properties":{"id":"20240311123958-it23kra","updated":"20240311124150"},"Children":[{"ID":"20240311123958-3ofl5yt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240311123958-3ofl5yt","updated":"20240311124150"},"Children":[{"ID":"20240311123958-6td7ca5","Type":"NodeParagraph","Properties":{"id":"20240311123958-6td7ca5","updated":"20240311124150"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"if constexpr"},{"Type":"NodeText","Data":"​ 条件必须是编译期常量"}]}]},{"ID":"20240311123958-qu8dcft","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240311123958-qu8dcft","updated":"20240311123958"},"Children":[{"ID":"20240311123958-usv6wft","Type":"NodeParagraph","Properties":{"id":"20240311123958-usv6wft","updated":"20240311123958"},"Children":[{"Type":"NodeText","Data":"编译器仅编译结果为 true 的代码"}]}]}]},{"ID":"20240311123958-tpzxqjb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311123958-tpzxqjb","updated":"20240311123958"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"void check() {\n    if constexpr(sizeof(int) \u003e sizeof(char)) {\n        cout \u003c\u003c \"sizeof(int) \u003e sizeof(char)\";\n    } else {\n        cout \u003c\u003c \"sizeof(int) \u003c= sizeof(char)\";\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311123958-54dk7am","Type":"NodeParagraph","Properties":{"id":"20240311123958-54dk7am","updated":"20240311123958"},"Children":[{"Type":"NodeText","Data":"经过编译后，若 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"int"},{"Type":"NodeText","Data":"​ 的内存空间大于 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"char"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"else"},{"Type":"NodeText","Data":"​ 分支将被移除；否则，将仅保留 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"else"},{"Type":"NodeText","Data":"​ 分支（事实上一定是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"true"},{"Type":"NodeText","Data":"​，这是 C++ 标准之一）"}]},{"ID":"20240311123958-now1pu8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311123958-now1pu8","updated":"20240311123958"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"void check() {\n    cout \u003c\u003c \"sizeof(int) \u003e sizeof(char)\";\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311123958-7wsij42","Type":"NodeParagraph","Properties":{"id":"20240311123958-7wsij42","updated":"20240311123958"},"Children":[{"Type":"NodeText","Data":"该功能用于模板时将非常好用。假设一种相等函数模板的定义如下："}]},{"ID":"20240311123958-phe3ldn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311123958-phe3ldn","updated":"20240311123958"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cclass T\u003e\nbool is_same_value(T a, T b) {\n    return a == b;\n}\n\ntemplate\u003c\u003e\nbool is_same_value\u003cdouble\u003e(double a, double b) {\n    if (std::abs(a - b) \u003c 0.0001) {\n        return true;\n    } else {\n        return false;\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311123958-djl6wep","Type":"NodeParagraph","Properties":{"id":"20240311123958-djl6wep","updated":"20240311123958"},"Children":[{"Type":"NodeText","Data":"可以通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"if constexpr"},{"Type":"NodeText","Data":"​ 可以将模板特化简化"}]},{"ID":"20240311123958-4ch4ev4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311123958-4ch4ev4","updated":"20240311123958"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cclass T\u003e\nbool is_same_value(T a, T b) {\n    if constexpr (std::is_same_v\u003cT, double\u003e) {\n        if (std::abs(a - b) \u003c 0.0001) {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return a == b;\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311123958-d85kfm3","Type":"NodeParagraph","Properties":{"id":"20240311123958-d85kfm3","style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);","updated":"20240311124038"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"if constexpr"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​ 的 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"else"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​ 很多情况下不能省略，如果省略编译结果可能与预期不符，常见可能产生多个 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"return"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​ 点，其返回类型可能不同。"}]},{"ID":"20240311123958-8o1iheg","Type":"NodeParagraph","Properties":{"id":"20240311123958-8o1iheg","updated":"20240311123958"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"if constexpr"},{"Type":"NodeText","Data":"​ 不支持短路规则，可能产生错误："}]},{"ID":"20240311123958-3xjurf0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311123958-3xjurf0","updated":"20240311123958"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cclass T\u003e\nint any2i(T value) {\n    // error: 'npos' is not a member of 'int'\n    if constexpr (std::is_same_v\u003cT, std::string\u003e \u0026\u0026 T::npos == -1) {\n        return atoi(value);\n    } else {\n        return (int) value;\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311123958-dw9alrq","Type":"NodeParagraph","Properties":{"id":"20240311123958-dw9alrq","updated":"20240311123958"},"Children":[{"Type":"NodeText","Data":" 上面的例子中，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"if constexpr"},{"Type":"NodeText","Data":"​ 首先判断 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"T"},{"Type":"NodeText","Data":"​ 类型是否为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"string"},{"Type":"NodeText","Data":"​。当 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"T != string"},{"Type":"NodeText","Data":"​ 时，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"T::npos"},{"Type":"NodeText","Data":"​ 不一定存在，但由于没有短路，将产生编译时错误。应改为嵌套 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"if"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240311123958-0ssj95x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311123958-0ssj95x","updated":"20240311123958"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cclass T\u003e\nint any2i(T value) {\n    if constexpr (std::is_same_v\u003cT, std::string\u003e) {\n        if (T::npos == -1) {\n            return atoi(value);\n        }\n    } else {\n        return (int) value;\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}