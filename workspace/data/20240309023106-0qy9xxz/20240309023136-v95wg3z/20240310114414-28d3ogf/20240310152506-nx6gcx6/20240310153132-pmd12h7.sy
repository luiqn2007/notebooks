{"ID":"20240310153132-pmd12h7","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2620-fe0f","id":"20240310153132-pmd12h7","title":"传递数组","updated":"20240310221321"},"Children":[{"ID":"20240310153216-i03saxr","Type":"NodeParagraph","Properties":{"id":"20240310153216-i03saxr","updated":"20240310221316"},"Children":[{"Type":"NodeText","Data":"若"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310144728-rj1rboz","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"数组"},{"Type":"NodeText","Data":"长度恒定，可以直接标明数组类型"}]},{"ID":"20240310153216-vsgmuf3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310153216-vsgmuf3","updated":"20240310153216"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"void func(int arr[10]);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310153216-4yixf61","Type":"NodeParagraph","Properties":{"id":"20240310153216-4yixf61","updated":"20240310221321"},"Children":[{"Type":"NodeText","Data":"但如果数组长度不定，数组的传递就不是按值传递，而是第一个元素的"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310011458-lcoh739","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"指针"},{"Type":"NodeText","Data":"，需要额外传递数组长度。"}]},{"ID":"20240310153216-4dr83jz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310153216-4dr83jz","updated":"20240310153216"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"void print(int arr[]) {\n    cout \u003c\u003c \"arr type is \" \u003c\u003c typeid(arr).name() \u003c\u003c endl;\n    cout \u003c\u003c \"arr size is \" \u003c\u003c sizeof arr \u003c\u003c endl;\n}\n\nint main() {\n    int arr[] = {0, 1, 2, 3, 4};\n    // arr type is A5_i\n    cout \u003c\u003c \"arr type is \" \u003c\u003c typeid(arr).name() \u003c\u003c endl;\n    // arr size is 20\n    cout \u003c\u003c \"arr size is \" \u003c\u003c sizeof arr \u003c\u003c endl;\n    cout \u003c\u003c \"==========================\" \u003c\u003c endl;\n    // arr type is Pi\n    // arr size is 8\n    print(arr);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}