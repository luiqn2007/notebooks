{"ID":"20240311022453-2w4l82o","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2328-fe0f","id":"20240311022453-2w4l82o","title":"decltype(auto)","updated":"20240311022717"},"Children":[{"ID":"20240311022505-8hd88kv","Type":"NodeParagraph","Properties":{"id":"20240311022505-8hd88kv","updated":"20240311022548"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"tag","TextMarkTextContent":"C++14"},{"Type":"NodeText","Data":"​ 引入 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"decltype(auto)"},{"Type":"NodeText","Data":"​ 结合使用表示用 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240310155845-6y4a4zf","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"decltype"},{"Type":"NodeText","Data":"​ 的推导规则推导 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240310155505-od3u1cu","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"auto"},{"Type":"NodeText","Data":"​。该组合必须单独使用，不能结合指针、引用、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"const"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"volatile"},{"Type":"NodeText","Data":"​ 使用，其他用法与 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"auto"},{"Type":"NodeText","Data":"​ 几乎完全相同只是推导规则不同。"}]},{"ID":"20240311022505-6717t7r","Type":"NodeParagraph","Properties":{"id":"20240311022505-6717t7r","updated":"20240311022623"},"Children":[{"Type":"NodeText","Data":"自 "},{"Type":"NodeTextMark","TextMarkType":"tag","TextMarkTextContent":"C++17"},{"Type":"NodeText","Data":"​ 后，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"decltype(auto)"},{"Type":"NodeText","Data":"​ 还可以用于"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240311021545-qptgwn8","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"非类型模板"},{"Type":"NodeText","Data":"的类型。"}]},{"ID":"20240311022505-e2cxqtj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311022505-e2cxqtj","updated":"20240311022505"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"int i = 3;\nint \u0026j = i;\nint \u0026\u0026foo();\n\n// a1 a2 均为 int\nauto a1 = i;\ndecltype(auto) a2 = i;\n// b1 为 int，b2 为 int\u0026\nauto b1 = j;\ndecltype(auto) b2 = j;\n// c1 为 int，c2 为 int\u0026\u0026\nauto c1 = foo();\ndecltype(auto) c2 = foo();\n// d1 d2 均为 int\nauto d1 {3};\ndecltype(auto) d2 {3};\n// e1 为 initializer_list\u003cint\u003e\n// e2 无法编译，因为 {3, 5} 不是表达式\nauto e1 = {3, 5};\ndecltype(auto) e2 = {3, 5};\n// *f1 为 int*\n// f2 无法编译，因为 decltype(auto) 只能独立使用\nauto *f1 = \u0026i;\ndecltype(auto) *f2 = \u0026i;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311022505-5n2jps6","Type":"NodeParagraph","Properties":{"id":"20240311022505-5n2jps6","updated":"20240311022717"},"Children":[{"Type":"NodeText","Data":"该组合用法可以代替函数"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310155948-li8402j","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"返回类型后置"},{"Type":"NodeText","Data":"："}]},{"ID":"20240311022505-ldphghv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311022505-ldphghv","updated":"20240311022505"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003ctypename A, typename B\u003e\ndecltype(auto) add2(A a, B b) {\n    return a + b;\n}\n// 等效于\ntemplate\u003ctypename A, typename B\u003e\nauto add1(A a, B b) -\u003e decltype(a + b) {\n    return a + b;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}