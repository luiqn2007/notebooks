{"ID":"20240310150948-1ghboya","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f527","id":"20240310150948-1ghboya","title":"rvalue","updated":"20240311023844"},"Children":[{"ID":"20240310150954-3qs0tje","Type":"NodeParagraph","Properties":{"id":"20240310150954-3qs0tje","updated":"20240310150954"},"Children":[{"Type":"NodeText","Data":"临时对象，又称右值，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"R-value"},{"Type":"NodeText","Data":"​，因其常位于赋值运算符右侧而得名。"}]},{"ID":"20240310150954-8kiegnq","Type":"NodeParagraph","Properties":{"id":"20240310150954-8kiegnq","updated":"20240310150954"},"Children":[{"Type":"NodeText","Data":"C++03及其之前的标准中，右值通常"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"无法被改变"},{"Type":"NodeText","Data":"，通常等效于 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"const T\u0026amp;"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20240310150954-d9ew5oq","Type":"NodeParagraph","Properties":{"id":"20240310150954-d9ew5oq","updated":"20240310212500"},"Children":[{"Type":"NodeText","Data":"C++11 引入右值引用类型，是一种非常量引用，标记为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"T\u0026amp;\u0026amp;"},{"Type":"NodeText","Data":"​，用于绑定临时对象，允许对象右值引用在初始化之后进行修改，主要为了实现 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240310151025-ekhxm7p","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"move"},{"Type":"NodeText","Data":"​ 语义。"}]},{"ID":"20240311023735-i99wuk9","Type":"NodeParagraph","Properties":{"id":"20240311023735-i99wuk9","updated":"20240311023735"},"Children":[{"Type":"NodeText","Data":"右值引用的作用是延长右值的存在时间。一般来说，右值在使用后直接销毁；而存在右值引用时，直到引用被销毁后右值才被销毁。"}]},{"ID":"20240310150954-ide1wtk","Type":"NodeParagraph","Properties":{"id":"20240310150954-ide1wtk","updated":"20240310212510"},"Children":[{"Type":"NodeText","Data":"以下示例仅供演示，实际应用一般在"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310151304-qy4gpts","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"完美转发"},{"Type":"NodeText","Data":"和类的"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310162017-6jmflci","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"移动构造"},{"Type":"NodeText","Data":"上"}]},{"ID":"20240310150954-ofe30ba","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310150954-ofe30ba","updated":"20240311023759"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"#include \u003ciostream\u003e\n\nusing namespace std;\n\nclass X {\npublic:\n\n    X() {\n        cout \u003c\u003c \"X 默认构造\\n\";\n    }\n\n    X(const X\u0026 x) {\n        cout \u003c\u003c \"X 复制构造\\n\";\n    }\n\n    void show() {\n        cout \u003c\u003c \"Show X\\n\";\n    }\n};\n\nX make_x() {\n    X x;\n    return x;\n}\n\nint main() {\n    X x = make_x();\n    x.show();\n    return 0;\n}"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311023804-aodg2dp","Type":"NodeParagraph","Properties":{"id":"20240311023804-aodg2dp","updated":"20240311023804"},"Children":[{"Type":"NodeText","Data":"以上代码在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"X x = make_x()"},{"Type":"NodeText","Data":"​ 时产生了三次构造函数调用"}]},{"ID":"20240311023804-dak4xax","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240311023804-dak4xax","updated":"20240311023804"},"Children":[{"ID":"20240311023804-gfqargi","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240311023804-gfqargi","updated":"20240311023804"},"Children":[{"ID":"20240311023804-4kktdlc","Type":"NodeParagraph","Properties":{"id":"20240311023804-4kktdlc","updated":"20240311023804"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"X x;"},{"Type":"NodeText","Data":"​ 调用无参构造创建对象"}]}]},{"ID":"20240311023804-5ry9mn1","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240311023804-5ry9mn1","updated":"20240311023804"},"Children":[{"ID":"20240311023804-i99qheu","Type":"NodeParagraph","Properties":{"id":"20240311023804-i99qheu","updated":"20240311023804"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"return x;"},{"Type":"NodeText","Data":"​ 调用复制构造创建用于返回的临时变量"}]}]},{"ID":"20240311023804-yd919pb","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20240311023804-yd919pb","updated":"20240311023804"},"Children":[{"ID":"20240311023804-e29hihb","Type":"NodeParagraph","Properties":{"id":"20240311023804-e29hihb","updated":"20240311023804"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"X x = ..."},{"Type":"NodeText","Data":"​ 调用复制构造将临时变量复制给 x 变量"}]}]}]},{"ID":"20240311023810-xislo3z","Type":"NodeParagraph","Properties":{"id":"20240311023810-xislo3z","style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);","updated":"20240311023823"},"Children":[{"Type":"NodeText","Data":"测试平台 g++.exe (x86_64-posix-seh-rev1, Built by MinGW-Builds project) 13.2.0"}]},{"ID":"20240311023820-scn561o","Type":"NodeParagraph","Properties":{"id":"20240311023820-scn561o","style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);","updated":"20240311023832"},"Children":[{"Type":"NodeText","Data":"使用了 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"-fno-elide-constructors"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​ 配置选项，经测试实际只调用了两次构造，可能新平台有其他优化"}]},{"ID":"20240311023844-0rys05c","Type":"NodeParagraph","Properties":{"id":"20240311023844-0rys05c","updated":"20240311023844"},"Children":[{"Type":"NodeText","Data":"将 main 函数中 x 的类型更改为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"X\u0026amp;\u0026amp;"},{"Type":"NodeText","Data":"​，如："}]},{"ID":"20240311023844-6mc5v7r","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311023844-6mc5v7r","updated":"20240311023844"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"// ...\n\nint main() {\n    X \u0026\u0026x = make_x();\n    x.show();\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311023844-5ikjwiy","Type":"NodeParagraph","Properties":{"id":"20240311023844-5ikjwiy","updated":"20240311023844"},"Children":[{"Type":"NodeText","Data":"之后调用只会产生两次构造。x 接收的是一个右值引用，延长了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"make_x()"},{"Type":"NodeText","Data":"​ 产生的右值的生命周期，不需要通过复制构造产生第二个对象。"}]}]}