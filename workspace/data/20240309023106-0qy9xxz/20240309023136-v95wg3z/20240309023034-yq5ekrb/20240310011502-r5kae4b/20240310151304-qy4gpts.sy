{"ID":"20240310151304-qy4gpts","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2328-fe0f","id":"20240310151304-qy4gpts","title":"完美转发","updated":"20240310212646"},"Children":[{"ID":"20240310151321-28rfwd2","Type":"NodeParagraph","Properties":{"id":"20240310151321-28rfwd2","updated":"20240310212611"},"Children":[{"Type":"NodeText","Data":"右值引用作为类型引入，使得"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310115502-swwwkjy","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"函数重载"},{"Type":"NodeText","Data":"可以区分左右值。但出于安全考虑，具名变量被称为左值，因此作为右值传入的值使用时也成为了左值。"}]},{"ID":"20240310151321-qnfaukb","Type":"NodeParagraph","Properties":{"id":"20240310151321-qnfaukb","updated":"20240310151321"},"Children":[{"Type":"NodeText","Data":"若该函数是作为一个中间函数将值向下一个函数传递，我们希望右值被传递到右值，默认行为但并非如此："}]},{"ID":"20240310151321-gk8jmpn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310151321-gk8jmpn","updated":"20240310151321"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"void b(int \u0026\u0026b) {\n    cout \u003c\u003c \"b\u0026\u0026=\" \u003c\u003c b \u003c\u003c endl;\n}\n\nvoid b(int \u0026b) {\n    cout \u003c\u003c \"b\u0026=\" \u003c\u003c b \u003c\u003c endl;\n}\n\nvoid a(int \u0026\u0026a) {\n    cout \u003c\u003c \"a\u0026\u0026=\" \u003c\u003c a \u003c\u003c endl;\n    b(a);\n}\n\nvoid a(int \u0026a) {\n    cout \u003c\u003c \"a\u0026=\" \u003c\u003c a \u003c\u003c endl;\n    b(a);\n}\n\nint main() {\n    int v = 10;\n    // a\u0026=10\n    // b\u0026=10\n    a(v);\n    // a\u0026\u0026=10\n    // b\u0026=10 -- 预期应该是 b\u0026\u0026=10\n    a(10);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310151321-w0r4jow","Type":"NodeParagraph","Properties":{"id":"20240310151321-w0r4jow","updated":"20240310212644"},"Children":[{"Type":"NodeText","Data":"利用 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240310151025-ekhxm7p","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"std::move"},{"Type":"NodeText","Data":"​​，可将右值直接传递给接收右值的函数，实现完美转发"}]},{"ID":"20240310151321-zcibugd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310151321-zcibugd","updated":"20240310151321"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"void b(int \u0026\u0026b) {\n    cout \u003c\u003c \"b\u0026\u0026=\" \u003c\u003c b \u003c\u003c endl;\n}\n\nvoid b(int \u0026b) {\n    cout \u003c\u003c \"b\u0026=\" \u003c\u003c b \u003c\u003c endl;\n}\n\nvoid a(int \u0026\u0026a) {\n    cout \u003c\u003c \"a\u0026\u0026=\" \u003c\u003c a \u003c\u003c endl;\n    b(std::move(a)); // 这里用了 move 语义\n}\n\nvoid a(int \u0026a) {\n    cout \u003c\u003c \"a\u0026=\" \u003c\u003c a \u003c\u003c endl;\n    b(a);\n}\n\nint main() {\n    int v = 10;\n    // a\u0026=10\n    // b\u0026=10\n    a(v);\n    // a\u0026\u0026=10\n    // b\u0026\u0026=10\n    a(10);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310212646-3uo225l","Type":"NodeParagraph","Properties":{"id":"20240310212646-3uo225l"}}]}