{"ID":"20240310151353-08gsmqf","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2328-fe0f","id":"20240310151353-08gsmqf","title":"作用域","updated":"20240310235944"},"Children":[{"ID":"20240310151405-fuo4qa8","Type":"NodeParagraph","Properties":{"id":"20240310151405-fuo4qa8","updated":"20240310151405"},"Children":[{"Type":"NodeText","Data":"作用域是一个成员可以被访问到的范围。"}]},{"ID":"20240310151405-duhgz3s","Type":"NodeParagraph","Properties":{"id":"20240310151405-duhgz3s","updated":"20240310151405"},"Children":[{"Type":"NodeText","Data":"对于直接在一个源文件中声明的变量，类，函数等，其作用域为整个程序（包括include了该文件的）代码中："}]},{"ID":"20240310151405-nb3a2k3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310151405-nb3a2k3","updated":"20240310151405"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"// a.h\nint a {5};\n\nint b() {\n    return 10;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310151405-wy5uh29","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310151405-wy5uh29","updated":"20240310151405"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"// main.h\n#include \"a.h\"\n\nint main() {\n    int c = b(); // 10\n    int d = c + a; // 10 + 5 = 15\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310151405-7muwpr2","Type":"NodeParagraph","Properties":{"id":"20240310151405-7muwpr2","updated":"20240310151423"},"Children":[{"Type":"NodeText","Data":"若该成员在一个"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310115655-67bgyss","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"命名空间"},{"Type":"NodeText","Data":"中，则所在命名空间便是其作用域，不同文件相同命名空间的成员在同一个作用域。"}]},{"ID":"20240310151405-9pa1gox","Type":"NodeParagraph","Properties":{"id":"20240310151405-9pa1gox","updated":"20240310235944"},"Children":[{"Type":"NodeText","Data":"若该成员在一个"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310151655-61cop4i","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"代码块"},{"Type":"NodeText","Data":"中，则其所在的上下文（即最近一层 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"{}"},{"Type":"NodeText","Data":"​ 包围的区域）便是其作用域"}]},{"ID":"20240310151405-xcfwn5d","Type":"NodeParagraph","Properties":{"id":"20240310151405-xcfwn5d","updated":"20240310213523"},"Children":[{"Type":"NodeText","Data":"同一个作用域中不能存在"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310011740-cnscg8o","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"标识符"},{"Type":"NodeText","Data":"相同的成员，但若成员所在作用域的上层作用域中存在同名成员是允许的，该成员会在其生效后（声明后）隐藏上层同名成员"}]},{"ID":"20240310151405-wj8rwr1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310151405-wj8rwr1","updated":"20240310151405"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"int a {10};\n\nint getA();\n\nint main() {\n    int b {10};\n    int c1 = a + b; // c1 = 10 + 10 = 20\n    int a {5}; // 没问题，会自动隐藏值为 10 的那个 a\n    int c2 = a + b; // c2 = 5 + 10 = 15\n    int c3 = getA() + b; // c3 = 10 + 10 = 20\n}\n\nint getA() {\n    // 由于其作用域不在 main 中，a 仍然访问的是值为 10 的 a\n    return a; // 10\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310151405-tsufdgl","Type":"NodeParagraph","Properties":{"id":"20240310151405-tsufdgl","updated":"20240310151405"},"Children":[{"Type":"NodeText","Data":"函数参数的作用域位于函数内，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"for"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"while"},{"Type":"NodeText","Data":"​ 等循环语句初始化列表的作用域位于循环体内。"}]}]}