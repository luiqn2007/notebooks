{"ID":"20240311113619-50ytzzj","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f527","id":"20240311113619-50ytzzj","title":"静态断言的间接实现","updated":"20240311113714"},"Children":[{"ID":"20240311113619-jla5bmf","Type":"NodeParagraph","Properties":{"id":"20240311113619-jla5bmf","updated":"20240311113704"},"Children":[{"Type":"NodeText","Data":"使用非静态断言实现的类似静态断言的方式"}]},{"ID":"20240311113714-ab8g15w","Type":"NodeList","ListData":{},"Properties":{"id":"20240311113714-ab8g15w","updated":"20240311113714"},"Children":[{"ID":"20240311113714-0plm41z","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240311113714-0plm41z","updated":"20240311113714"},"Children":[{"ID":"20240311113714-gygk1br","Type":"NodeParagraph","Properties":{"id":"20240311113714-gygk1br","updated":"20240311113714"},"Children":[{"Type":"NodeText","Data":"宏定义：利用数组下标不可为负"}]}]}]},{"ID":"20240311113714-f3zgn3z","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311113714-f3zgn3z","updated":"20240311113714"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"#define STATIC_ASSERT_CONCAT_IMP(x, y) x ## y\n#define STATIC_ASSERT_CONCAT(x, y) STATIC_ASSERT_CONCAT_IMP(x, y)\n#define STATIC_ASSERT(expr) \\\ndo {                        \\\n    char STATIC_ASSERT_CONCAT(static_assert_var, __COUNTER__) \\\n    [(expr) != 0 ? 1 : -1]; \\\n} while(0)                  \\\n\nint main() {\n    // ok\n    STATIC_ASSERT(1);\n    // size '-1' of array 'static_assert_var1' is negative\n    STATIC_ASSERT(0);\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311113714-vi1offz","Type":"NodeList","ListData":{},"Properties":{"id":"20240311113714-vi1offz","updated":"20240311113714"},"Children":[{"ID":"20240311113714-t2g9q8t","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240311113714-t2g9q8t","updated":"20240311113714"},"Children":[{"ID":"20240311113714-6r0ys8x","Type":"NodeParagraph","Properties":{"id":"20240311113714-6r0ys8x","updated":"20240311113714"},"Children":[{"Type":"NodeText","Data":"使用模板特化：通过实例化一个不存在的模板引发错误，但无法出现在类和结构体的定义中"}]}]}]},{"ID":"20240311113714-y8qw0bs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311113714-y8qw0bs","updated":"20240311113714"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cbool\u003e\nstruct static_assert_st;\ntemplate\u003c\u003e\nstruct static_assert_st\u003ctrue\u003e {};\n\n#define STATIC_ASSERT(expr) static_assert_st\u003c(expr) != 0\u003e()\n\nint main() {\n    // ok\n    STATIC_ASSERT(1);\n    // declaration of 'struct static_assert_st\u003cfalse\u003e'\n    STATIC_ASSERT(0);\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311113714-v12r30s","Type":"NodeList","ListData":{},"Properties":{"id":"20240311113714-v12r30s","updated":"20240311113714"},"Children":[{"ID":"20240311113714-do5evoe","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240311113714-do5evoe","updated":"20240311113714"},"Children":[{"ID":"20240311113714-n6eipjl","Type":"NodeParagraph","Properties":{"id":"20240311113714-n6eipjl","updated":"20240311113714"},"Children":[{"Type":"NodeText","Data":"另一种模板特化的实现：声明一个变量，可以出现在定义中，但会改变其内存布局"}]}]}]},{"ID":"20240311113714-9l69ubs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311113714-9l69ubs","updated":"20240311113714"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cbool\u003e\nstruct static_assert_st;\ntemplate\u003c\u003e\nstruct static_assert_st\u003ctrue\u003e {\n};\n\n#define STATIC_ASSERT_CONCAT_IMP(x, y) x ## y\n#define STATIC_ASSERT_CONCAT(x, y) STATIC_ASSERT_CONCAT_IMP(x, y)\n\n#define STATIC_ASSERT(expr) \\\nstatic_assert_st\u003c(expr) != 0\u003e \\\nSTATIC_ASSERT_CONCAT(static_assert_var, __COUNTER__)\n\nint main() {\n    // ok\n    STATIC_ASSERT(1);\n    // Implicit instantiation of undefined template 'static_assert_st\u003cfalse\u003e'\n    STATIC_ASSERT(0);\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}