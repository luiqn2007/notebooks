{"ID":"20240309023008-1temlmj","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2328-fe0f","id":"20240309023008-1temlmj","title":"变量","updated":"20240310233145"},"Children":[{"ID":"20240309023012-gr6xcaz","Type":"NodeParagraph","Properties":{"id":"20240309023012-gr6xcaz","updated":"20240310161338"},"Children":[{"Type":"NodeText","Data":"C++ 的变量代表一块可访问的内存空间，每个变量的类型应当在其声明时便已确定，并有一个合法的"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310011740-cnscg8o","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"标识符"},{"Type":"NodeText","Data":"作为其名称。"}]},{"ID":"20240310161338-d56ohei","Type":"NodeParagraph","Properties":{"id":"20240310161338-d56ohei","updated":"20240310161338"},"Children":[{"Type":"NodeText","Data":"变量通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"变量类型 变量名1[, 变量名2, ...]"},{"Type":"NodeText","Data":"​ 的形式进行声明，每个变量都对应一个内存地址。"}]},{"ID":"20240310161338-v90xp5r","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310161338-v90xp5r","updated":"20240310161338"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"int a;\nint b, c;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310161348-a8zjyfe","Type":"NodeParagraph","Properties":{"id":"20240310161348-a8zjyfe","updated":"20240310233145"},"Children":[{"Type":"NodeText","Data":"在值类型和指针类型变量在声明时便会初始化默认值，全局中为数值 0 或其等价的值（"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"'\\0'"},{"Type":"NodeText","Data":"​​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nullptr"},{"Type":"NodeText","Data":"​​ 等），"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310150515-ksccl6h","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"类"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310150332-idqhik0","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"结构体"},{"Type":"NodeText","Data":"等复合类型会使用无参构造进行初始化；局部则"},{"Type":"NodeTextMark","TextMarkType":"inline-memo","TextMarkInlineMemoContent":"未定义行为，通常编译器会保留原本内存中的值，因此具体是什么值是不可预测的","TextMarkTextContent":"初始化为随机值"},{"Type":"NodeText","Data":"。建议在声明后手动初始化。"}]},{"ID":"20240310161348-6aoqaq7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310161348-6aoqaq7","updated":"20240310161348"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"int a = 10;\nint b (10);\nint c {10};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310161348-5jlvlan","Type":"NodeParagraph","Properties":{"id":"20240310161348-5jlvlan","updated":"20240310161348"},"Children":[{"Type":"NodeText","Data":"这三种方法初始化方式都可以，但推荐使用第三种，使用初始化列表可以统一所有类型的初始化。"}]},{"ID":"20240310190346-374dzj8","Type":"NodeParagraph","Properties":{"id":"20240310190346-374dzj8","updated":"20240310190451"}}]}