{"ID":"20240311234235-lxysdot","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2620-fe0f","id":"20240311234235-lxysdot","title":"原子约束","updated":"20240311234612"},"Children":[{"ID":"20240311234236-go3fqu8","Type":"NodeParagraph","Properties":{"id":"20240311234236-go3fqu8","style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);","updated":"20240311234612"},"Children":[{"Type":"NodeText","Data":"原子"},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);"},"TextMarkType":"block-ref","TextMarkBlockRefID":"20240311233822-z1eido1","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"约束"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);\"}"},{"Type":"NodeText","Data":"：表达式和表达式中模板形参到模板实参映射的组合，简称为形参映射"}]},{"ID":"20240311234257-wevfoyv","Type":"NodeParagraph","Properties":{"id":"20240311234257-wevfoyv","updated":"20240311234257"},"Children":[{"Type":"NodeText","Data":"当且仅当代码上具有相同表现，且形参映射相同时，两个原子约束是相同的。"}]},{"ID":"20240311234351-1894yuw","Type":"NodeSuperBlock","Properties":{"id":"20240311234351-1894yuw","updated":"20240311234352"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240311234257-nnl0auk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311234257-nnl0auk","updated":"20240311234352"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cint N\u003e constexpr bool Atomic = true;\ntemplate\u003cint N\u003e concept C = Atomic\u003cN\u003e;\ntemplate\u003cint N\u003e concept Add1 = C\u003cN + 1\u003e;\ntemplate\u003cint N\u003e concept AddOne = C\u003cN + 1\u003e;\ntemplate\u003cint M\u003e void f() requires Add1\u003c2 * M\u003e {};\ntemplate\u003cint M\u003e void f() requires AddOne\u003c2 * M\u003e \u0026\u0026 true {};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311234257-a5f0z9j","Type":"NodeParagraph","Properties":{"id":"20240311234257-a5f0z9j","updated":"20240311234352"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Add1"},{"Type":"NodeText","Data":"​ 与 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"AddOne"},{"Type":"NodeText","Data":"​ 约束是相同的，形参映射都是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"N ~ 2 * N + 1"},{"Type":"NodeText","Data":"​。此时，编译器会选择 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"AddOne\u0026lt;2 * M\u0026gt; \u0026amp;\u0026amp; true"},{"Type":"NodeText","Data":"​ 作为目标函数，因为其更加复杂，且包含了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Add1\u0026lt;2 * M\u0026gt;"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240311234419-0ddmwv8","Type":"NodeSuperBlock","Properties":{"id":"20240311234419-0ddmwv8","updated":"20240311234420"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240311234257-7ey7f3y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311234257-7ey7f3y","updated":"20240311234420"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cint M\u003e void f() requires Add1\u003c2 * M\u003e {};\ntemplate\u003cint M\u003e void f() requires Add1\u003cM * 2\u003e \u0026\u0026 true {};\n// error: call of overloaded 'f\u003c10\u003e()' is ambiguous\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311234257-of2wbe7","Type":"NodeParagraph","Properties":{"id":"20240311234257-of2wbe7","updated":"20240311234420"},"Children":[{"Type":"NodeText","Data":"无法通过编译，因为两个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Add1"},{"Type":"NodeText","Data":"​ 的形参映射分别为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"2 * M + 1"},{"Type":"NodeText","Data":"​和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"M * 2 + 1"},{"Type":"NodeText","Data":"​，在形式上是不同的。"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240311234257-swrlvok","Type":"NodeParagraph","Properties":{"id":"20240311234257-swrlvok","updated":"20240311234456"},"Children":[{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"当函数存在原子约束时，如果约束表达式的结果是相同的，则约束表达式应当是相同的。"}]},{"ID":"20240311234257-lblv7w1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311234257-lblv7w1","updated":"20240311234456"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cclass T\u003e concept sad = false;\ntemplate\u003cclass T\u003e int f(T) requires (!sad\u003cT\u003e) { return 1; };\ntemplate\u003cclass T\u003e int f(T) requires (!sad\u003cT\u003e) \u0026\u0026 true { return 1; };\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311234257-9jk0c9p","Type":"NodeParagraph","Properties":{"id":"20240311234257-9jk0c9p","updated":"20240311234257"},"Children":[{"Type":"NodeText","Data":"以上代码编译失败，因为两个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"!sad\u0026lt;T\u0026gt;"},{"Type":"NodeText","Data":"​ 是来自不同的约束表达式。应该为"}]},{"ID":"20240311234257-61vt0a9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311234257-61vt0a9","updated":"20240311234456"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cclass T\u003e concept sad = false;\ntemplate\u003cclass T\u003e concept not_sad = !sad\u003cT\u003e;\ntemplate\u003cclass T\u003e int f(T) requires (not_sad\u003cT\u003e) { return 1; };\ntemplate\u003cclass T\u003e int f(T) requires (not_sad\u003cT\u003e) \u0026\u0026 true { return 1; };\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}