{"ID":"20240311233935-4hbeflc","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2620-fe0f","id":"20240311233935-4hbeflc","title":"概念","updated":"20240311233941"},"Children":[{"ID":"20240311233941-tc82yyl","Type":"NodeParagraph","Properties":{"id":"20240311233941-tc82yyl","updated":"20240311233941"},"Children":[{"Type":"NodeText","Data":"完整的概念使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"concept"},{"Type":"NodeText","Data":"​ 声明，并替换 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"class"},{"Type":"NodeText","Data":"​ 或 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"typename"},{"Type":"NodeText","Data":"​，被替换的名称称为概念，右侧的表达式称为约束表达式，如下面例子中的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"IntegralType"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240311233941-p0rzwqo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311233941-p0rzwqo","updated":"20240311233941"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cclass T\u003e\nconcept IntegralType = is_integral_v\u003cT\u003e;\n\ntemplate\u003cIntegralType T\u003e\nstruct X {};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311233941-mbph8qu","Type":"NodeParagraph","Properties":{"id":"20240311233941-mbph8qu","updated":"20240311233941"},"Children":[{"Type":"NodeText","Data":"概念也可以对 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"auto"},{"Type":"NodeText","Data":"​ 进行约束"}]},{"ID":"20240311233941-0jortun","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311233941-0jortun","updated":"20240311233941"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cclass T\u003e\nconcept IntegralType = is_integral_v\u003cT\u003e;\n\nvoid foo(IntegralType auto v) { ... }\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311233941-67e5wkk","Type":"NodeParagraph","Properties":{"id":"20240311233941-67e5wkk","updated":"20240311233941"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"注意：概念必须紧跟被修饰类型，中间不能加"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"const"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240311233941-gwh1oc6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311233941-gwh1oc6","updated":"20240311233941"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cclass C\u003e\nconcept IntType = is_integral_v\u003cC\u003e;\n\nIntType auto i = 1;\nconst IntType auto j = 2;\nIntType auto const k = 3;\n// error: expected 'auto' or 'decltype(auto)' after 'IntType'\nIntType const auto l = 3;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}