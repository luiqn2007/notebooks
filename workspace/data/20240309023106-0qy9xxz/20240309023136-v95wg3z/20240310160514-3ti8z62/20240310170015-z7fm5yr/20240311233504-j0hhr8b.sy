{"ID":"20240311233504-j0hhr8b","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2620-fe0f","id":"20240311233504-j0hhr8b","title":"实例","updated":"20240311233630"},"Children":[{"ID":"20240311233533-m7yfsas","Type":"NodeSuperBlock","Properties":{"id":"20240311233533-m7yfsas","updated":"20240311233534"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240311233510-5s82lik","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311233510-5s82lik","updated":"20240311233534"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"struct X {};\nstruct Y {\n    Y(X) {}\n};\n\nX foo(Y, Y) { return X(); }\n\ntemplate\u003cclass T\u003e\nauto foo(T t1, T t2) -\u003e decltype(t1 + t2) {\n    return t1 + t2;\n}\n\nint main() {\n    X t1, t2;\n    auto t3 = foo(t1, t2);\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311233510-afrac3n","Type":"NodeParagraph","Properties":{"id":"20240311233510-afrac3n","updated":"20240311233534"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"t1"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"t2"},{"Type":"NodeText","Data":"​ 类型为 X，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"X + X"},{"Type":"NodeText","Data":"​ 并没有对应的类型，触发 "},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310170015-z7fm5yr","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"SFINAE"},{"Type":"NodeText","Data":"，模板不会进行实例化，转而调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"X foo(Y, Y)"},{"Type":"NodeText","Data":"​；而 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Y"},{"Type":"NodeText","Data":"​ 可以由 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"X"},{"Type":"NodeText","Data":"​ 隐式转换而来，可以正常编译，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"t3"},{"Type":"NodeText","Data":"​ 类型为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"X"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240311233604-0pooi7v","Type":"NodeSuperBlock","Properties":{"id":"20240311233604-0pooi7v","updated":"20240311233605"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240311233510-m6nflx5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311233510-m6nflx5","updated":"20240311233605"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003cint I\u003e\nvoid foo(char(*)[I % 2 == 0] = nullptr) {\n    cout \u003c\u003c \"I % 2 == 0\\n\";\n}\n\ntemplate\u003cint I\u003e\nvoid foo(char(*)[I % 2 != 0] = nullptr) {\n    cout \u003c\u003c \"I % 2 != 0\\n\";\n}\n\nint main() {\n    char a[1];\n    // I % 2 != 0\n    foo\u003c5\u003e(\u0026a);\n    // I % 2 == 0\n    foo\u003c4\u003e(\u0026a);\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311233601-976fonr","Type":"NodeSuperBlock","Properties":{"id":"20240311233601-976fonr","updated":"20240311233605"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240311233510-5r4m15d","Type":"NodeParagraph","Properties":{"id":"20240311233510-5r4m15d","updated":"20240311233603"},"Children":[{"Type":"NodeText","Data":"根据 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"I"},{"Type":"NodeText","Data":"​ 值的奇偶性可以引出 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"foo"},{"Type":"NodeText","Data":"​ 后面的形参的两种情况："}]},{"ID":"20240311233510-4hh872q","Type":"NodeList","ListData":{},"Properties":{"id":"20240311233510-4hh872q","updated":"20240311233603"},"Children":[{"ID":"20240311233510-wvvjq6z","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240311233510-wvvjq6z","updated":"20240311233510"},"Children":[{"ID":"20240311233510-rwbn9ep","Type":"NodeParagraph","Properties":{"id":"20240311233510-rwbn9ep","updated":"20240311233510"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"char(*)[0]=nullptr"},{"Type":"NodeText","Data":"​：传入的数组长度为 1，替换失败"}]}]},{"ID":"20240311233510-ilhlwoe","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240311233510-ilhlwoe","updated":"20240311233548"},"Children":[{"ID":"20240311233510-zn6mby4","Type":"NodeParagraph","Properties":{"id":"20240311233510-zn6mby4","updated":"20240311233548"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"char(*)[1]=nullptr"},{"Type":"NodeText","Data":"​：编译通过"}]}]}]},{"ID":"20240311233552-qfav9mc","Type":"NodeParagraph","Properties":{"id":"20240311233552-qfav9mc","updated":"20240311233603"},"Children":[{"Type":"NodeText","Data":"通过这种方法，可以实现编译时的函数选择"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240311233628-i45sybk","Type":"NodeSuperBlock","Properties":{"id":"20240311233628-i45sybk","updated":"20240311233630"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240311233510-jmd4iux","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311233510-jmd4iux","updated":"20240311233630"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"class SomeObj {\npublic:\n    void Dump2File() const {\n        cout \u003c\u003c \"dump the object to file\\n\";\n    }\n};\n\ntemplate\u003cclass T\u003e\nauto DumpObj(const T \u0026t) -\u003e decltype(((void) t.Dump2File(), void())) {\n    t.Dump2File();\n}\n\nvoid DumpObj(...) {\n    cout \u003c\u003c \"object must have function Dump2File()\\n\";\n}\n\nint main() {\n    SomeObj v1;\n    string v2;\n    // dump the object to file\n    DumpObj(v1);\n    // object must have function Dump2File()\n    DumpObj(v2);\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311233510-ao128mg","Type":"NodeParagraph","Properties":{"id":"20240311233510-ao128mg","updated":"20240311233630"},"Children":[{"Type":"NodeText","Data":"一个有一定实用性的例子。"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"DumpObj"},{"Type":"NodeText","Data":"​ 方法要求给定对象需要有 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Dump2File"},{"Type":"NodeText","Data":"​ 方法，通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"decltype"},{"Type":"NodeText","Data":"​ 检查了一次 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Dump2File"},{"Type":"NodeText","Data":"​ 方法，若没有该方法触发替换失败，调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"void DumpObj(...)"},{"Type":"NodeText","Data":"​ 重载。"}]},{"Type":"NodeSuperBlockCloseMarker"}]}]}