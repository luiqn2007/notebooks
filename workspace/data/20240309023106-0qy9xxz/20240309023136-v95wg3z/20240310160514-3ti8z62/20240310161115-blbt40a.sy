{"ID":"20240310161115-blbt40a","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2620-fe0f","id":"20240310161115-blbt40a","title":"模板特化","updated":"20240310225235"},"Children":[{"ID":"20240310161122-xxkazu6","Type":"NodeParagraph","Properties":{"id":"20240310161122-xxkazu6","updated":"20240310225235"},"Children":[{"Type":"NodeText","Data":"C++ 允许对特定的"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310160514-3ti8z62","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"模板"},{"Type":"NodeText","Data":"参数值设定特定的实现，称为模板特化。形式上，将需要特化的模板参数从尖括号中移除，并在特定位置将对应值替代即可。"}]},{"ID":"20240310161122-zpqzokl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310161122-zpqzokl","updated":"20240310161122"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"#include \u003ccstring\u003e\n\ntemplate\u003ctypename T\u003e\nT add(T a, T b) {\n    return a + b;\n}\n\n// 将 T 为 const char* 的类型进行特化\ntemplate\u003c\u003e\nconst char *add(const char *a, const char *b) {\n    size_t len = strlen(a) + strlen(b);\n    char *new_str = new char[len];\n    memcpy(new_str, a, strlen(a) * sizeof(char));\n    strcat(new_str, b);\n    return new_str;\n}\n\nint main() {\n    // 8\n    cout \u003c\u003c add(3, 5) \u003c\u003c endl;\n    // Hello World\n    cout \u003c\u003c add(\"Hello \", \"World\") \u003c\u003c endl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240310161122-6gfd1dj","Type":"NodeParagraph","Properties":{"id":"20240310161122-6gfd1dj","updated":"20240310161122"},"Children":[{"Type":"NodeText","Data":"模板特化可以只特化部分模板参数。对于类的部分特化又称为局部特化"}]},{"ID":"20240310161122-yh6od0v","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240310161122-yh6od0v","updated":"20240310161122"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"template\u003ctypename T, int time\u003e\nT addAndMul(T a, T b) {\n    return (a + b) * time;\n}\n\ntemplate\u003cint time\u003e\nconst char *addAndMul(const char *a, const char *b) {\n    char *tmp_str = new char[strlen(a) + strlen(b)];\n    memcpy(tmp_str, a, strlen(a) * sizeof(char));\n    strcat(tmp_str, b);\n\n    char *new_str = new char[strlen(tmp_str) * time];\n    new_str[0] = '\\0';\n    for (int i = 0; i \u003c time; ++i) {\n        strcat(new_str, tmp_str);\n    }\n\n    return new_str;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}