{"ID":"20240311231818-rpot9b3","Spec":"1","Type":"NodeDocument","Properties":{"icon":"2620-fe0f","id":"20240311231818-rpot9b3","tags":"C++20","title":"非类型模板参数中的字面量类类型","updated":"20240311231906"},"Children":[{"ID":"20240311231835-a63001i","Type":"NodeParagraph","Properties":{"id":"20240311231835-a63001i","updated":"20240311231846"},"Children":[{"Type":"NodeText","Data":"允许非类型"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240310160514-3ti8z62","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"模板"},{"Type":"NodeText","Data":"参数中的字面量类类型，字面量类类型可用于非类型模板参数，限制有："}]},{"ID":"20240311231841-xgyc886","Type":"NodeList","ListData":{},"Properties":{"id":"20240311231841-xgyc886","updated":"20240311231841"},"Children":[{"ID":"20240311231841-98qsqy3","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240311231841-98qsqy3","updated":"20240311231841"},"Children":[{"ID":"20240311231841-r5apuq1","Type":"NodeParagraph","Properties":{"id":"20240311231841-r5apuq1","updated":"20240311231841"},"Children":[{"Type":"NodeText","Data":"所有基类和非静态数据成员都是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"public"},{"Type":"NodeText","Data":"​ 且不可变的"}]}]},{"ID":"20240311231841-k0j29ht","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240311231841-k0j29ht","updated":"20240311231841"},"Children":[{"ID":"20240311231841-uqrrkhd","Type":"NodeParagraph","Properties":{"id":"20240311231841-uqrrkhd","updated":"20240311231841"},"Children":[{"Type":"NodeText","Data":"所有基类和非静态数据成员都是标量类型、左值引用或其数组"}]}]}]},{"ID":"20240311231835-hkaceul","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240311231835-hkaceul","updated":"20240311231835"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"// 一个类类型\ntemplate\u003cclass T, size_t N\u003e\nstruct basic_fixed_string {\n    T data[N + 1];\n\n    constexpr basic_fixed_string(const T(\u0026foo)[N + 1]) {\n        copy_n(foo, N + 1, data);\n    }\n};\n\n// 允许一个字符串隐式转换成 basic_fixed_string\ntemplate\u003cclass T, size_t N\u003e\nbasic_fixed_string(const T(\u0026foo)[N]) -\u003e basic_fixed_string\u003cT, N - 1\u003e;\n\ntemplate\u003cbasic_fixed_string str\u003e\nstruct X {\n    X() {\n        cout \u003c\u003c str.data;\n    }\n};\n\nint main() {\n    // 实参\n    X\u003c\"hello world\"\u003e x;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240311231906-q7ngtm9","Type":"NodeParagraph","Properties":{"id":"20240311231906-q7ngtm9"}}]}